{
  "address": "0x1235E75b468100e1d0eE275E2D9cEd388F1228C2",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_erc20token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_authorizer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_exchange_rate",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "usdValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "usdValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "usdValue",
          "type": "uint256"
        }
      ],
      "name": "WithdrawVault",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "approvedToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "authorizer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value_token",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "erc20token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "last_signed_nonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Router01",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approve",
          "type": "bool"
        }
      ],
      "name": "setApprovedToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "new_authorizer",
          "type": "address"
        }
      ],
      "name": "setAuthorizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_exchange_rate",
          "type": "uint256"
        }
      ],
      "name": "setExchangeRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "setWithdrawFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value_qbux",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            }
          ],
          "internalType": "struct QBuxVault.Sig",
          "name": "signature",
          "type": "tuple"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb177b11ca353496047d63c3f044299febb238346a9ddc3feba395e798dcc63b0",
  "receipt": {
    "to": null,
    "from": "0xB4f2723A025615F012f416d920D3ecf40Dd47ea4",
    "contractAddress": "0x1235E75b468100e1d0eE275E2D9cEd388F1228C2",
    "transactionIndex": 29,
    "gasUsed": "1611363",
    "logsBloom": "0x00000000000000000000000000000000000000000000800000800000000000000000000000000000000000000000000000008000000000000002000000200000000000000000000000000000000000800001100000000000000110000000000000000000020080000400000000000800000000000000000180000000000000c0000111000000000000000000000000000000000808000000000100000000000022000000000000000000000000000000000000000000000000000000000000400000000000000000000100000000000800000000000000000010000000002000001000800000a000000000000000000000000000000000000000000000100000",
    "blockHash": "0x027609feab91007568e1713d9896247748dfb850d4fb67ecec9a5d448046811b",
    "transactionHash": "0xb177b11ca353496047d63c3f044299febb238346a9ddc3feba395e798dcc63b0",
    "logs": [
      {
        "transactionIndex": 29,
        "blockNumber": 30385786,
        "transactionHash": "0xb177b11ca353496047d63c3f044299febb238346a9ddc3feba395e798dcc63b0",
        "address": "0x1235E75b468100e1d0eE275E2D9cEd388F1228C2",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000b4f2723a025615f012f416d920d3ecf40dd47ea4"
        ],
        "data": "0x",
        "logIndex": 108,
        "blockHash": "0x027609feab91007568e1713d9896247748dfb850d4fb67ecec9a5d448046811b"
      },
      {
        "transactionIndex": 29,
        "blockNumber": 30385786,
        "transactionHash": "0xb177b11ca353496047d63c3f044299febb238346a9ddc3feba395e798dcc63b0",
        "address": "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x0000000000000000000000001235e75b468100e1d0ee275e2d9ced388f1228c2",
          "0x000000000000000000000000a5e0829caced8ffdd4de3c43696c57f7d7a678ff"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 109,
        "blockHash": "0x027609feab91007568e1713d9896247748dfb850d4fb67ecec9a5d448046811b"
      },
      {
        "transactionIndex": 29,
        "blockNumber": 30385786,
        "transactionHash": "0xb177b11ca353496047d63c3f044299febb238346a9ddc3feba395e798dcc63b0",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000b4f2723a025615f012f416d920d3ecf40dd47ea4",
          "0x000000000000000000000000bc6044f4a1688d8b8596a9f7d4659e09985eebe6"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000d4d1bbce4b6bc0000000000000000000000000000000000000000000000000481317b07916be960000000000000000000000000000000000000000000048eefd50588eb149c132000000000000000000000000000000000000000000000000473e45f4aacb52d60000000000000000000000000000000000000000000048eefe252a4a7f952cf2",
        "logIndex": 110,
        "blockHash": "0x027609feab91007568e1713d9896247748dfb850d4fb67ecec9a5d448046811b"
      }
    ],
    "blockNumber": 30385786,
    "cumulativeGasUsed": "6088378",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174",
    "0x3Fc30f1C68B9AA344F81B57F5bf813af77E51E0b",
    "0xa5E0829CaCEd8fFDD4De3c43696c57F7D7A678ff",
    200
  ],
  "numDeployments": 2,
  "solcInputHash": "82ab661632dfdd1ef772a079b4a494b2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_authorizer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_exchange_rate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdValue\",\"type\":\"uint256\"}],\"name\":\"WithdrawVault\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvedToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authorizer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value_token\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"last_signed_nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router01\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approve\",\"type\":\"bool\"}],\"name\":\"setApprovedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"new_authorizer\",\"type\":\"address\"}],\"name\":\"setAuthorizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_exchange_rate\",\"type\":\"uint256\"}],\"name\":\"setExchangeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"setWithdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value_qbux\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"internalType\":\"struct QBuxVault.Sig\",\"name\":\"signature\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/quickbux/QbuxVault.sol\":\"QBuxVault\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"content\":\"pragma solidity >=0.6.2;\\n\\ninterface IUniswapV2Router01 {\\n    function factory() external pure returns (address);\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint amountADesired,\\n        uint amountBDesired,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\n    function addLiquidityETH(\\n        address token,\\n        uint amountTokenDesired,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETH(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountToken, uint amountETH);\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountToken, uint amountETH);\\n    function swapExactTokensForTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapTokensForExactTokens(\\n        uint amountOut,\\n        uint amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\n}\\n\",\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\"},\"contracts/quickbux/QbuxVault.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\\\";\\n\\ncontract QBuxVault is Ownable {\\n  address public erc20token;\\n  IUniswapV2Router01 public router;\\n  address public authorizer;\\n  uint256 exchange_rate;\\n  mapping(address => uint256) public last_signed_nonce;\\n  mapping(address => bool) public approvedToken;\\n  uint256 vaultUSD;\\n\\n  address vaultFees;\\n  uint256 withdrawPercentage;\\n\\n  uint256 private constant _MAX_UINT256 = type(uint256).max;\\n\\n  event Deposit(\\n    address indexed account,\\n    uint256 indexed timestamp,\\n    uint256 usdValue,\\n    uint256 value\\n  );\\n  event Withdraw(\\n    address indexed account,\\n    uint256 indexed timestamp,\\n    uint256 usdValue,\\n    uint256 value\\n  );\\n  event WithdrawVault(address indexed to, uint256 usdValue);\\n\\n  struct Sig {\\n    bytes32 r;\\n    bytes32 s;\\n    uint8 v;\\n  }\\n\\n  function _validRedeemParam(\\n    address account,\\n    uint256 value,\\n    uint256 timestamp,\\n    Sig calldata signature\\n  ) private view returns (bool) {\\n    bytes32 messageHash = keccak256(abi.encodePacked(account, value, timestamp));\\n    bytes32 ethSignedMessageHash = keccak256(\\n      abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", messageHash)\\n    );\\n\\n    return ecrecover(ethSignedMessageHash, signature.v, signature.r, signature.s) == authorizer;\\n  }\\n\\n  constructor(\\n    address _erc20token,\\n    address _authorizer,\\n    address _router,\\n    uint256 _exchange_rate\\n  ) {\\n    erc20token = _erc20token;\\n    authorizer = _authorizer;\\n    router = IUniswapV2Router01(_router);\\n    exchange_rate = _exchange_rate;\\n\\n    IERC20(_erc20token).approve(address(_router), _MAX_UINT256);\\n  }\\n\\n  function setAuthorizer(address new_authorizer) public onlyOwner {\\n    authorizer = new_authorizer;\\n  }\\n\\n  function setExchangeRate(uint256 _exchange_rate) public onlyOwner {\\n    exchange_rate = _exchange_rate;\\n  }\\n\\n  function setApprovedToken(address token, bool approve) public onlyOwner {\\n    approvedToken[token] = approve;\\n    if (approve) {\\n      IERC20(token).approve(address(router), _MAX_UINT256);\\n    } else {\\n      IERC20(token).approve(address(router), 0);\\n    }\\n  }\\n\\n  function setWithdrawFees(address vault, uint256 fee) public onlyOwner {\\n    vaultFees = vault;\\n    withdrawPercentage = fee;\\n  }\\n\\n  function deposit(address token, uint256 value_token) public onlyApprovedToken(token) {\\n    uint256 converted = value_token * exchange_rate;\\n    vaultUSD += value_token;\\n\\n    if (token == erc20token) {\\n      IERC20(token).transferFrom(msg.sender, address(this), value_token);\\n    } else {\\n      address[] memory path = new address[](2);\\n      path[0] = token;\\n      path[1] = erc20token;\\n\\n      uint256[] memory amounts = router.getAmountsIn(value_token, path);\\n\\n      IERC20(token).transferFrom(msg.sender, address(this), amounts[0]);\\n      router.swapTokensForExactTokens(value_token, amounts[0], path, address(this), _MAX_UINT256);\\n    }\\n\\n    emit Deposit(msg.sender, block.timestamp, value_token, converted);\\n  }\\n\\n  function withdraw(\\n    address token,\\n    address account,\\n    uint256 value_qbux,\\n    uint256 timestamp,\\n    Sig calldata signature\\n  ) public onlyApprovedToken(token) {\\n    require(block.timestamp - timestamp < 600, \\\"QBuxVault:OLD_SIGNATURE\\\");\\n    require(\\n      _validRedeemParam(account, value_qbux, timestamp, signature),\\n      \\\"QBuxVault:INVALID_SIGNATURE\\\"\\n    );\\n    require(last_signed_nonce[account] != timestamp, \\\"QBuxVault:NONCE_USED\\\");\\n\\n    uint256 converted = value_qbux / exchange_rate;\\n    if (withdrawPercentage > 0) {\\n      converted -= converted * (withdrawPercentage / 10000);\\n    }\\n\\n    vaultUSD -= converted;\\n    last_signed_nonce[account] = timestamp;\\n\\n    if (token == erc20token) {\\n      IERC20(token).transfer(account, converted);\\n    } else {\\n      address[] memory path = new address[](2);\\n      path[0] = erc20token;\\n      path[1] = token;\\n\\n      router.swapExactTokensForTokens(converted, 0, path, account, _MAX_UINT256);\\n    }\\n\\n    emit Withdraw(account, timestamp, converted, value_qbux);\\n  }\\n\\n  function withdrawVault(address to, uint256 amount) external {\\n    require(msg.sender == vaultFees, \\\"QBuxValut:NOT_VAULT\\\");\\n    require(amount <= vaultUSD, \\\"QBuxValut:INSUFFICIENT_USD\\\");\\n    vaultUSD -= amount;\\n    IERC20(erc20token).transfer(to, amount);\\n    emit WithdrawVault(to, amount);\\n  }\\n\\n  modifier onlyApprovedToken(address token) {\\n    require(approvedToken[token], \\\"QBuxValut:TOKEN_NOT_APPROVED\\\");\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x3f26b9683574e3748b7ecb44bc99225d45b8a1d7fffef375f14945bed5b7d783\",\"license\":\"AGPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001b6238038062001b62833981016040819052620000349162000174565b6200003f3362000107565b600180546001600160a01b038681166001600160a01b031992831681179093556003805487831690841617905560028054918616919092168117909155600483815560405163095ea7b360e01b815290810191909152600019602482015263095ea7b390604401602060405180830381600087803b158015620000c157600080fd5b505af1158015620000d6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000fc9190620001c6565b5050505050620001f1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200016f57600080fd5b919050565b600080600080608085870312156200018b57600080fd5b620001968562000157565b9350620001a66020860162000157565b9250620001b66040860162000157565b6060959095015193969295505050565b600060208284031215620001d957600080fd5b81518015158114620001ea57600080fd5b9392505050565b61196180620002016000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80637e6a340011610097578063db068e0e11610066578063db068e0e1461024c578063e76b46981461025f578063f2fde38b14610272578063f887ea401461028557600080fd5b80637e6a3400146101e85780638da5cb5b146101fb5780639804dab914610219578063d09edf311461022c57600080fd5b806345369d27116100d357806345369d271461018757806347e7ef241461019a5780634df87c09146101ad578063715018a6146101e057600080fd5b8063058a628f146100fa5780631dcea4271461010f578063306f4ddf14610159575b600080fd5b61010d610108366004611513565b6102a5565b005b60015461012f9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b610179610167366004611513565b60056020526000908152604090205481565b604051908152602001610150565b61010d610195366004611535565b610358565b61010d6101a8366004611535565b61040a565b6101d06101bb366004611513565b60066020526000908152604090205460ff1681565b6040519015158152602001610150565b61010d6108b9565b61010d6101f636600461156d565b61092c565b60005473ffffffffffffffffffffffffffffffffffffffff1661012f565b61010d610227366004611535565b610b1b565b60035461012f9073ffffffffffffffffffffffffffffffffffffffff1681565b61010d61025a3660046115a4565b610cec565b61010d61026d3660046115bd565b610d58565b61010d610280366004611513565b611211565b60025461012f9073ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103115760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103bf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610308565b600880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9390931692909217909155600955565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260066020526040902054829060ff166104815760405162461bcd60e51b815260206004820152601c60248201527f5142757856616c75743a544f4b454e5f4e4f545f415050524f564544000000006044820152606401610308565b600060045483610491919061166d565b905082600760008282546104a591906116aa565b909155505060015473ffffffffffffffffffffffffffffffffffffffff8581169116141561057f576040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810184905273ffffffffffffffffffffffffffffffffffffffff8516906323b872dd90606401602060405180830381600087803b15801561054157600080fd5b505af1158015610555573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057991906116c2565b50610876565b60408051600280825260608201835260009260208301908036833701905050905084816000815181106105b4576105b461170e565b73ffffffffffffffffffffffffffffffffffffffff928316602091820292909201015260018054835192169183919081106105f1576105f161170e565b73ffffffffffffffffffffffffffffffffffffffff92831660209182029290920101526002546040517f1f00ca740000000000000000000000000000000000000000000000000000000081526000929190911690631f00ca749061065b908890869060040161178e565b60006040518083038186803b15801561067357600080fd5b505afa158015610687573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106af91908101906117af565b90508573ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846000815181106106e2576106e261170e565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff93841660048201529290911660248301526044820152606401602060405180830381600087803b15801561076157600080fd5b505af1158015610775573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079991906116c2565b50600254815173ffffffffffffffffffffffffffffffffffffffff90911690638803dbee90879084906000906107d1576107d161170e565b602002602001015185307fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518663ffffffff1660e01b815260040161081c95949392919061186d565b600060405180830381600087803b15801561083657600080fd5b505af115801561084a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261087291908101906117af565b5050505b6040805184815260208101839052429133917f36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e910160405180910390a350505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146109205760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610308565b61092a600061130d565b565b60005473ffffffffffffffffffffffffffffffffffffffff1633146109935760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610308565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260066020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168215801591909117909155610abc576002546040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60248201529083169063095ea7b3906044015b602060405180830381600087803b158015610a7f57600080fd5b505af1158015610a93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab791906116c2565b505050565b6002546040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9182166004820152600060248201529083169063095ea7b390604401610a65565b60085473ffffffffffffffffffffffffffffffffffffffff163314610b825760405162461bcd60e51b815260206004820152601360248201527f5142757856616c75743a4e4f545f5641554c54000000000000000000000000006044820152606401610308565b600754811115610bd45760405162461bcd60e51b815260206004820152601a60248201527f5142757856616c75743a494e53554646494349454e545f5553440000000000006044820152606401610308565b8060076000828254610be691906118b6565b90915550506001546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8481166004830152602482018490529091169063a9059cbb90604401602060405180830381600087803b158015610c5f57600080fd5b505af1158015610c73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9791906116c2565b508173ffffffffffffffffffffffffffffffffffffffff167f781b06ede92edf4c49c9ae27f17beea169c6638a088cc245c6ebfe1011a770cf82604051610ce091815260200190565b60405180910390a25050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610d535760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610308565b600455565b73ffffffffffffffffffffffffffffffffffffffff8516600090815260066020526040902054859060ff16610dcf5760405162461bcd60e51b815260206004820152601c60248201527f5142757856616c75743a544f4b454e5f4e4f545f415050524f564544000000006044820152606401610308565b610258610ddc84426118b6565b10610e295760405162461bcd60e51b815260206004820152601760248201527f514275785661756c743a4f4c445f5349474e41545552450000000000000000006044820152606401610308565b610e3585858585611382565b610e815760405162461bcd60e51b815260206004820152601b60248201527f514275785661756c743a494e56414c49445f5349474e415455524500000000006044820152606401610308565b73ffffffffffffffffffffffffffffffffffffffff8516600090815260056020526040902054831415610ef65760405162461bcd60e51b815260206004820152601460248201527f514275785661756c743a4e4f4e43455f555345440000000000000000000000006044820152606401610308565b600060045485610f0691906118cd565b60095490915015610f3857612710600954610f2191906118cd565b610f2b908261166d565b610f3590826118b6565b90505b8060076000828254610f4a91906118b6565b909155505073ffffffffffffffffffffffffffffffffffffffff808716600090815260056020526040902085905560015488821691161415611034576040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811660048301526024820183905288169063a9059cbb90604401602060405180830381600087803b158015610ff657600080fd5b505af115801561100a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102e91906116c2565b506111b5565b6040805160028082526060820183526000926020830190803683375050600154825192935073ffffffffffffffffffffffffffffffffffffffff16918391506000906110825761108261170e565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505087816001815181106110d0576110d061170e565b73ffffffffffffffffffffffffffffffffffffffff92831660209182029290920101526002546040517f38ed17390000000000000000000000000000000000000000000000000000000081529116906338ed17399061115c90859060009086908d907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9060040161186d565b600060405180830381600087803b15801561117657600080fd5b505af115801561118a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111b291908101906117af565b50505b6040805182815260208101879052859173ffffffffffffffffffffffffffffffffffffffff8916917f02f25270a4d87bea75db541cdfe559334a275b4a233520ed6c0a2429667cca94910160405180910390a350505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146112785760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610308565b73ffffffffffffffffffffffffffffffffffffffff81166113015760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610308565b61130a8161130d565b50565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606086901b1660208201526034810184905260548101839052600090819060740160405160208183030381529060405280519060200120905060008160405160200161141e91907f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810191909152603c0190565b60408051601f19818403018152918152815160209092019190912060035490925073ffffffffffffffffffffffffffffffffffffffff1690600190839061146b9060608901908901611908565b604080516000815260208181018084529490945260ff909216908201528735606082015290870135608082015260a0016020604051602081039080840390855afa1580156114bd573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff161492505050949350505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461150e57600080fd5b919050565b60006020828403121561152557600080fd5b61152e826114ea565b9392505050565b6000806040838503121561154857600080fd5b611551836114ea565b946020939093013593505050565b801515811461130a57600080fd5b6000806040838503121561158057600080fd5b611589836114ea565b915060208301356115998161155f565b809150509250929050565b6000602082840312156115b657600080fd5b5035919050565b600080600080600085870360e08112156115d657600080fd5b6115df876114ea565b95506115ed602088016114ea565b9450604087013593506060870135925060607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808201121561162d57600080fd5b506080860190509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156116a5576116a561163e565b500290565b600082198211156116bd576116bd61163e565b500190565b6000602082840312156116d457600080fd5b815161152e8161155f565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081518084526020808501945080840160005b8381101561178357815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101611751565b509495945050505050565b8281526040602082015260006117a7604083018461173d565b949350505050565b600060208083850312156117c257600080fd5b825167ffffffffffffffff808211156117da57600080fd5b818501915085601f8301126117ee57600080fd5b815181811115611800576118006116df565b8060051b604051601f19603f83011681018181108582111715611825576118256116df565b60405291825284820192508381018501918883111561184357600080fd5b938501935b8285101561186157845184529385019392850192611848565b98975050505050505050565b85815284602082015260a06040820152600061188c60a083018661173d565b73ffffffffffffffffffffffffffffffffffffffff94909416606083015250608001529392505050565b6000828210156118c8576118c861163e565b500390565b600082611903577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60006020828403121561191a57600080fd5b813560ff8116811461152e57600080fdfea2646970667358221220b074a1df6db69633830d2f7f86b9cbcac53b057bf9d851f0adbcf90ebbfa7cb864736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c80637e6a340011610097578063db068e0e11610066578063db068e0e1461024c578063e76b46981461025f578063f2fde38b14610272578063f887ea401461028557600080fd5b80637e6a3400146101e85780638da5cb5b146101fb5780639804dab914610219578063d09edf311461022c57600080fd5b806345369d27116100d357806345369d271461018757806347e7ef241461019a5780634df87c09146101ad578063715018a6146101e057600080fd5b8063058a628f146100fa5780631dcea4271461010f578063306f4ddf14610159575b600080fd5b61010d610108366004611513565b6102a5565b005b60015461012f9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b610179610167366004611513565b60056020526000908152604090205481565b604051908152602001610150565b61010d610195366004611535565b610358565b61010d6101a8366004611535565b61040a565b6101d06101bb366004611513565b60066020526000908152604090205460ff1681565b6040519015158152602001610150565b61010d6108b9565b61010d6101f636600461156d565b61092c565b60005473ffffffffffffffffffffffffffffffffffffffff1661012f565b61010d610227366004611535565b610b1b565b60035461012f9073ffffffffffffffffffffffffffffffffffffffff1681565b61010d61025a3660046115a4565b610cec565b61010d61026d3660046115bd565b610d58565b61010d610280366004611513565b611211565b60025461012f9073ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103115760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103bf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610308565b600880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9390931692909217909155600955565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260066020526040902054829060ff166104815760405162461bcd60e51b815260206004820152601c60248201527f5142757856616c75743a544f4b454e5f4e4f545f415050524f564544000000006044820152606401610308565b600060045483610491919061166d565b905082600760008282546104a591906116aa565b909155505060015473ffffffffffffffffffffffffffffffffffffffff8581169116141561057f576040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810184905273ffffffffffffffffffffffffffffffffffffffff8516906323b872dd90606401602060405180830381600087803b15801561054157600080fd5b505af1158015610555573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057991906116c2565b50610876565b60408051600280825260608201835260009260208301908036833701905050905084816000815181106105b4576105b461170e565b73ffffffffffffffffffffffffffffffffffffffff928316602091820292909201015260018054835192169183919081106105f1576105f161170e565b73ffffffffffffffffffffffffffffffffffffffff92831660209182029290920101526002546040517f1f00ca740000000000000000000000000000000000000000000000000000000081526000929190911690631f00ca749061065b908890869060040161178e565b60006040518083038186803b15801561067357600080fd5b505afa158015610687573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106af91908101906117af565b90508573ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846000815181106106e2576106e261170e565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff93841660048201529290911660248301526044820152606401602060405180830381600087803b15801561076157600080fd5b505af1158015610775573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079991906116c2565b50600254815173ffffffffffffffffffffffffffffffffffffffff90911690638803dbee90879084906000906107d1576107d161170e565b602002602001015185307fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518663ffffffff1660e01b815260040161081c95949392919061186d565b600060405180830381600087803b15801561083657600080fd5b505af115801561084a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261087291908101906117af565b5050505b6040805184815260208101839052429133917f36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e910160405180910390a350505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146109205760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610308565b61092a600061130d565b565b60005473ffffffffffffffffffffffffffffffffffffffff1633146109935760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610308565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260066020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168215801591909117909155610abc576002546040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60248201529083169063095ea7b3906044015b602060405180830381600087803b158015610a7f57600080fd5b505af1158015610a93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab791906116c2565b505050565b6002546040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9182166004820152600060248201529083169063095ea7b390604401610a65565b60085473ffffffffffffffffffffffffffffffffffffffff163314610b825760405162461bcd60e51b815260206004820152601360248201527f5142757856616c75743a4e4f545f5641554c54000000000000000000000000006044820152606401610308565b600754811115610bd45760405162461bcd60e51b815260206004820152601a60248201527f5142757856616c75743a494e53554646494349454e545f5553440000000000006044820152606401610308565b8060076000828254610be691906118b6565b90915550506001546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8481166004830152602482018490529091169063a9059cbb90604401602060405180830381600087803b158015610c5f57600080fd5b505af1158015610c73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9791906116c2565b508173ffffffffffffffffffffffffffffffffffffffff167f781b06ede92edf4c49c9ae27f17beea169c6638a088cc245c6ebfe1011a770cf82604051610ce091815260200190565b60405180910390a25050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610d535760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610308565b600455565b73ffffffffffffffffffffffffffffffffffffffff8516600090815260066020526040902054859060ff16610dcf5760405162461bcd60e51b815260206004820152601c60248201527f5142757856616c75743a544f4b454e5f4e4f545f415050524f564544000000006044820152606401610308565b610258610ddc84426118b6565b10610e295760405162461bcd60e51b815260206004820152601760248201527f514275785661756c743a4f4c445f5349474e41545552450000000000000000006044820152606401610308565b610e3585858585611382565b610e815760405162461bcd60e51b815260206004820152601b60248201527f514275785661756c743a494e56414c49445f5349474e415455524500000000006044820152606401610308565b73ffffffffffffffffffffffffffffffffffffffff8516600090815260056020526040902054831415610ef65760405162461bcd60e51b815260206004820152601460248201527f514275785661756c743a4e4f4e43455f555345440000000000000000000000006044820152606401610308565b600060045485610f0691906118cd565b60095490915015610f3857612710600954610f2191906118cd565b610f2b908261166d565b610f3590826118b6565b90505b8060076000828254610f4a91906118b6565b909155505073ffffffffffffffffffffffffffffffffffffffff808716600090815260056020526040902085905560015488821691161415611034576040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811660048301526024820183905288169063a9059cbb90604401602060405180830381600087803b158015610ff657600080fd5b505af115801561100a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102e91906116c2565b506111b5565b6040805160028082526060820183526000926020830190803683375050600154825192935073ffffffffffffffffffffffffffffffffffffffff16918391506000906110825761108261170e565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505087816001815181106110d0576110d061170e565b73ffffffffffffffffffffffffffffffffffffffff92831660209182029290920101526002546040517f38ed17390000000000000000000000000000000000000000000000000000000081529116906338ed17399061115c90859060009086908d907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9060040161186d565b600060405180830381600087803b15801561117657600080fd5b505af115801561118a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111b291908101906117af565b50505b6040805182815260208101879052859173ffffffffffffffffffffffffffffffffffffffff8916917f02f25270a4d87bea75db541cdfe559334a275b4a233520ed6c0a2429667cca94910160405180910390a350505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146112785760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610308565b73ffffffffffffffffffffffffffffffffffffffff81166113015760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610308565b61130a8161130d565b50565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606086901b1660208201526034810184905260548101839052600090819060740160405160208183030381529060405280519060200120905060008160405160200161141e91907f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810191909152603c0190565b60408051601f19818403018152918152815160209092019190912060035490925073ffffffffffffffffffffffffffffffffffffffff1690600190839061146b9060608901908901611908565b604080516000815260208181018084529490945260ff909216908201528735606082015290870135608082015260a0016020604051602081039080840390855afa1580156114bd573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff161492505050949350505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461150e57600080fd5b919050565b60006020828403121561152557600080fd5b61152e826114ea565b9392505050565b6000806040838503121561154857600080fd5b611551836114ea565b946020939093013593505050565b801515811461130a57600080fd5b6000806040838503121561158057600080fd5b611589836114ea565b915060208301356115998161155f565b809150509250929050565b6000602082840312156115b657600080fd5b5035919050565b600080600080600085870360e08112156115d657600080fd5b6115df876114ea565b95506115ed602088016114ea565b9450604087013593506060870135925060607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808201121561162d57600080fd5b506080860190509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156116a5576116a561163e565b500290565b600082198211156116bd576116bd61163e565b500190565b6000602082840312156116d457600080fd5b815161152e8161155f565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081518084526020808501945080840160005b8381101561178357815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101611751565b509495945050505050565b8281526040602082015260006117a7604083018461173d565b949350505050565b600060208083850312156117c257600080fd5b825167ffffffffffffffff808211156117da57600080fd5b818501915085601f8301126117ee57600080fd5b815181811115611800576118006116df565b8060051b604051601f19603f83011681018181108582111715611825576118256116df565b60405291825284820192508381018501918883111561184357600080fd5b938501935b8285101561186157845184529385019392850192611848565b98975050505050505050565b85815284602082015260a06040820152600061188c60a083018661173d565b73ffffffffffffffffffffffffffffffffffffffff94909416606083015250608001529392505050565b6000828210156118c8576118c861163e565b500390565b600082611903577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60006020828403121561191a57600080fd5b813560ff8116811461152e57600080fdfea2646970667358221220b074a1df6db69633830d2f7f86b9cbcac53b057bf9d851f0adbcf90ebbfa7cb864736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 249,
        "contract": "contracts/quickbux/QbuxVault.sol:QBuxVault",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 15103,
        "contract": "contracts/quickbux/QbuxVault.sol:QBuxVault",
        "label": "erc20token",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 15106,
        "contract": "contracts/quickbux/QbuxVault.sol:QBuxVault",
        "label": "router",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IUniswapV2Router01)6285"
      },
      {
        "astId": 15108,
        "contract": "contracts/quickbux/QbuxVault.sol:QBuxVault",
        "label": "authorizer",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 15110,
        "contract": "contracts/quickbux/QbuxVault.sol:QBuxVault",
        "label": "exchange_rate",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 15114,
        "contract": "contracts/quickbux/QbuxVault.sol:QBuxVault",
        "label": "last_signed_nonce",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 15118,
        "contract": "contracts/quickbux/QbuxVault.sol:QBuxVault",
        "label": "approvedToken",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 15120,
        "contract": "contracts/quickbux/QbuxVault.sol:QBuxVault",
        "label": "vaultUSD",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 15122,
        "contract": "contracts/quickbux/QbuxVault.sol:QBuxVault",
        "label": "vaultFees",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      },
      {
        "astId": 15124,
        "contract": "contracts/quickbux/QbuxVault.sol:QBuxVault",
        "label": "withdrawPercentage",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IUniswapV2Router01)6285": {
        "encoding": "inplace",
        "label": "contract IUniswapV2Router01",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}