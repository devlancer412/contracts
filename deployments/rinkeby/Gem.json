{
  "address": "0x31Df60F0271D055e0485D5E71E8f3c644cc47c9B",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "baseUri_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "gemId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gemType",
          "type": "uint256"
        }
      ],
      "name": "GemTypeSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerPulled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "pushedOwner",
          "type": "address"
        }
      ],
      "name": "OwnerPushed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseUri",
          "type": "string"
        }
      ],
      "name": "UpdateBaseUri",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "gemTypes",
          "type": "uint256[]"
        }
      ],
      "name": "batchMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gemId",
          "type": "uint256"
        }
      ],
      "name": "gemTypes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantMinterRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "gemType",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "newOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pullOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "pushOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeMinterRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "gemIds",
          "type": "uint256[]"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newUri",
          "type": "string"
        }
      ],
      "name": "setBaseUri",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gemId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x64c2bebb7b89610f03b3a1201a13a711673df8e57df6d8ca0d63ee33e75f4dfa",
  "receipt": {
    "to": null,
    "from": "0x374180e6E1b14454C18e44b635A95e7d37160570",
    "contractAddress": "0x31Df60F0271D055e0485D5E71E8f3c644cc47c9B",
    "transactionIndex": 71,
    "gasUsed": "1607101",
    "logsBloom": "0x
    "blockHash": "0xd09e285129bd64d12b9ecefec24a2f7cc252650aa38d10829f5d589c1efbeb23",
    "transactionHash": "0x64c2bebb7b89610f03b3a1201a13a711673df8e57df6d8ca0d63ee33e75f4dfa",
    "logs": [
      {
        "transactionIndex": 71,
        "blockNumber": 10341539,
        "transactionHash": "0x64c2bebb7b89610f03b3a1201a13a711673df8e57df6d8ca0d63ee33e75f4dfa",
        "address": "0x31Df60F0271D055e0485D5E71E8f3c644cc47c9B",
        "topics": [
          "0xaac18e3887f7d855b2483e20615f8e3fb6efc18e25502090082b47047fb57c73",
          "0x000000000000000000000000374180e6e1b14454c18e44b635a95e7d37160570",
          "0x0000000000000000000000000000000000000000000000000000000000000000"
        ],
        "data": "0x",
        "logIndex": 179,
        "blockHash": "0xd09e285129bd64d12b9ecefec24a2f7cc252650aa38d10829f5d589c1efbeb23"
      },
      {
        "transactionIndex": 71,
        "blockNumber": 10341539,
        "transactionHash": "0x64c2bebb7b89610f03b3a1201a13a711673df8e57df6d8ca0d63ee33e75f4dfa",
        "address": "0x31Df60F0271D055e0485D5E71E8f3c644cc47c9B",
        "topics": [
          "0x157eb1fffc1000c7f0ee8cb1f87be2620ec910b8be9e3af7db8c97328e2757cf"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000",
        "logIndex": 180,
        "blockHash": "0xd09e285129bd64d12b9ecefec24a2f7cc252650aa38d10829f5d589c1efbeb23"
      }
    ],
    "blockNumber": 10341539,
    "cumulativeGasUsed": "11834672",
    "status": 1,
    "byzantium": true
  },
  "args": [
    ""
  ],
  "numDeployments": 2,
  "solcInputHash": "962469a4fb996ca0d8a52110e1722da3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseUri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gemId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gemType\",\"type\":\"uint256\"}],\"name\":\"GemTypeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pushedOwner\",\"type\":\"address\"}],\"name\":\"OwnerPushed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseUri\",\"type\":\"string\"}],\"name\":\"UpdateBaseUri\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"gemTypes\",\"type\":\"uint256[]\"}],\"name\":\"batchMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gemId\",\"type\":\"uint256\"}],\"name\":\"gemTypes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantMinterRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gemType\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"pushOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeMinterRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"gemIds\",\"type\":\"uint256[]\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newUri\",\"type\":\"string\"}],\"name\":\"setBaseUri\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gemId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Gem.sol\":\"Gem\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\"},\"@rari-capital/solmate/src/tokens/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern, minimalist, and gas efficient ERC-721 implementation.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC721.sol)\\n/// @dev Note that balanceOf does not revert if passed the zero address, in defiance of the ERC.\\nabstract contract ERC721 {\\n    /*///////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 indexed id);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 indexed id);\\n\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /*///////////////////////////////////////////////////////////////\\n                          METADATA STORAGE/LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    function tokenURI(uint256 id) public view virtual returns (string memory);\\n\\n    /*///////////////////////////////////////////////////////////////\\n                            ERC721 STORAGE                        \\n    //////////////////////////////////////////////////////////////*/\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(uint256 => address) public ownerOf;\\n\\n    mapping(uint256 => address) public getApproved;\\n\\n    mapping(address => mapping(address => bool)) public isApprovedForAll;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(string memory _name, string memory _symbol) {\\n        name = _name;\\n        symbol = _symbol;\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC721 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 id) public virtual {\\n        address owner = ownerOf[id];\\n\\n        require(msg.sender == owner || isApprovedForAll[owner][msg.sender], \\\"NOT_AUTHORIZED\\\");\\n\\n        getApproved[id] = spender;\\n\\n        emit Approval(owner, spender, id);\\n    }\\n\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        isApprovedForAll[msg.sender][operator] = approved;\\n\\n        emit ApprovalForAll(msg.sender, operator, approved);\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 id\\n    ) public virtual {\\n        require(from == ownerOf[id], \\\"WRONG_FROM\\\");\\n\\n        require(to != address(0), \\\"INVALID_RECIPIENT\\\");\\n\\n        require(\\n            msg.sender == from || msg.sender == getApproved[id] || isApprovedForAll[from][msg.sender],\\n            \\\"NOT_AUTHORIZED\\\"\\n        );\\n\\n        // Underflow of the sender's balance is impossible because we check for\\n        // ownership above and the recipient's balance can't realistically overflow.\\n        unchecked {\\n            balanceOf[from]--;\\n\\n            balanceOf[to]++;\\n        }\\n\\n        ownerOf[id] = to;\\n\\n        delete getApproved[id];\\n\\n        emit Transfer(from, to, id);\\n    }\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id\\n    ) public virtual {\\n        transferFrom(from, to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\") ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        bytes memory data\\n    ) public virtual {\\n        transferFrom(from, to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data) ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC165 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function supportsInterface(bytes4 interfaceId) public pure virtual returns (bool) {\\n        return\\n            interfaceId == 0x01ffc9a7 || // ERC165 Interface ID for ERC165\\n            interfaceId == 0x80ac58cd || // ERC165 Interface ID for ERC721\\n            interfaceId == 0x5b5e139f; // ERC165 Interface ID for ERC721Metadata\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                       INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 id) internal virtual {\\n        require(to != address(0), \\\"INVALID_RECIPIENT\\\");\\n\\n        require(ownerOf[id] == address(0), \\\"ALREADY_MINTED\\\");\\n\\n        // Counter overflow is incredibly unrealistic.\\n        unchecked {\\n            balanceOf[to]++;\\n        }\\n\\n        ownerOf[id] = to;\\n\\n        emit Transfer(address(0), to, id);\\n    }\\n\\n    function _burn(uint256 id) internal virtual {\\n        address owner = ownerOf[id];\\n\\n        require(ownerOf[id] != address(0), \\\"NOT_MINTED\\\");\\n\\n        // Ownership check above ensures no underflow.\\n        unchecked {\\n            balanceOf[owner]--;\\n        }\\n\\n        delete ownerOf[id];\\n\\n        delete getApproved[id];\\n\\n        emit Transfer(owner, address(0), id);\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                       INTERNAL SAFE MINT LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _safeMint(address to, uint256 id) internal virtual {\\n        _mint(to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, address(0), id, \\\"\\\") ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n\\n    function _safeMint(\\n        address to,\\n        uint256 id,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, address(0), id, data) ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n}\\n\\n/// @notice A generic interface for a contract which properly accepts ERC721 tokens.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC721.sol)\\ninterface ERC721TokenReceiver {\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xf97378ab999188b3d5d97037fabbecbc726892c74cba6536899b852eb4756d6a\",\"license\":\"AGPL-3.0-only\"},\"contracts/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ncontract AccessControl {\\n  //Address of current owner\\n  address public owner;\\n  //Address of new owner (Note: new owner must pull to be an owner)\\n  address public newOwner;\\n  //Maps if user has minter role\\n  mapping(address => bool) public isMinter;\\n\\n  //Fires when new owner is pushed\\n  event OwnerPushed(address indexed pushedOwner);\\n  //Fires when new owner pulled\\n  event OwnerPulled(address indexed previousOwner, address indexed newOwner);\\n  //Fires when minter role is granted\\n  event MinterRoleGranted(address indexed account);\\n  //Fires when minter role is revoked\\n  event MinterRoleRevoked(address indexed account);\\n\\n  constructor() {\\n    owner = msg.sender;\\n    emit OwnerPulled(msg.sender, address(0));\\n  }\\n\\n  modifier onlyOwner() {\\n    require(msg.sender == owner, \\\"Only owner\\\");\\n    _;\\n  }\\n\\n  modifier onlyMinter() {\\n    require(isMinter[msg.sender], \\\"Only minter\\\");\\n    _;\\n  }\\n\\n  function pushOwner(address account) public onlyOwner {\\n    require(account != address(0), \\\"No address(0)\\\");\\n    newOwner = account;\\n    emit OwnerPushed(account);\\n  }\\n\\n  function pullOwner() external {\\n    require(msg.sender == newOwner, \\\"Only new owner\\\");\\n    address oldOwner = owner;\\n    owner = msg.sender;\\n    emit OwnerPulled(oldOwner, msg.sender);\\n  }\\n\\n  function grantMinterRole(address account) external onlyOwner {\\n    require(account != address(0), \\\"No address(0)\\\");\\n    require(!isMinter[account], \\\"Already granted\\\");\\n    isMinter[account] = true;\\n    emit MinterRoleGranted(account);\\n  }\\n\\n  function revokeMinterRole(address account) external onlyOwner {\\n    require(isMinter[account], \\\"Not granted\\\");\\n    isMinter[account] = false;\\n    emit MinterRoleRevoked(account);\\n  }\\n}\\n\",\"keccak256\":\"0xa378a2786b2bb40505d8b8ced421705ce224f31d20fb0d7cc94955d05aa7ac33\",\"license\":\"MIT\"},\"contracts/Gem.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {ERC721} from \\\"@rari-capital/solmate/src/tokens/ERC721.sol\\\";\\nimport \\\"./GemMetadata.sol\\\";\\nimport \\\"./AccessControl.sol\\\";\\n\\ncontract Gem is ERC721, AccessControl, GemMetadata {\\n  //Current gemId count\\n  uint256 private _gemIdCounter = 0;\\n\\n  constructor(string memory baseUri_) ERC721(\\\"Gem\\\", \\\"GEM\\\") {\\n    setBaseUri(baseUri_);\\n  }\\n\\n  function totalSupply() public view returns (uint256) {\\n    return _gemIdCounter;\\n  }\\n\\n  function safeBatchTransferFrom(\\n    address from,\\n    address to,\\n    uint256[] memory gemIds\\n  ) external {\\n    for (uint256 i = 0; i < gemIds.length; ) {\\n      safeTransferFrom(from, to, gemIds[i]);\\n      unchecked {\\n        i++;\\n      }\\n    }\\n  }\\n\\n  function mint(address to, uint256 gemType) external onlyMinter {\\n    uint256 gemId = _gemIdCounter;\\n\\n    unchecked {\\n      _gemIdCounter++;\\n    }\\n\\n    _mint(to, gemId, gemType);\\n  }\\n\\n  function batchMint(address to, uint256[] memory gemTypes) external onlyMinter {\\n    uint256 gemId = _gemIdCounter;\\n\\n    for (uint256 i = 0; i < gemTypes.length; ) {\\n      _mint(to, gemId, gemTypes[i]);\\n\\n      unchecked {\\n        gemId++;\\n        i++;\\n      }\\n    }\\n\\n    _gemIdCounter = gemId;\\n  }\\n\\n  function _mint(\\n    address to,\\n    uint256 gemId,\\n    uint256 gemType\\n  ) private {\\n    _safeMint(to, gemId);\\n    _setGemType(gemId, gemType);\\n  }\\n}\\n\",\"keccak256\":\"0xd058653230711a1ca7fff3dbf6e753be56da648bd23cff69429c5e479aa53808\",\"license\":\"MIT\"},\"contracts/GemMetadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {ERC721} from \\\"@rari-capital/solmate/src/tokens/ERC721.sol\\\";\\nimport {Strings} from \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\nimport \\\"./AccessControl.sol\\\";\\n\\nabstract contract GemMetadata is ERC721, AccessControl {\\n  using Strings for uint256;\\n\\n  //Gem metadata base uri\\n  string private _baseUri;\\n  //Maps gem id to gem types\\n  mapping(uint256 => uint256) private _gemTypes;\\n\\n  //Fires when base uri is updated\\n  event UpdateBaseUri(string baseUri);\\n  //Fires when gem type is set\\n  event GemTypeSet(uint256 indexed gemId, uint256 gemType);\\n\\n  function gemTypes(uint256 gemId) public view returns (uint256) {\\n    require(_exists(gemId), \\\"Query for nonexistent gem\\\");\\n    return _gemTypes[gemId];\\n  }\\n\\n  function tokenURI(uint256 gemId) public view override returns (string memory) {\\n    require(_exists(gemId), \\\"Query for nonexistent gem\\\");\\n    return string(abi.encodePacked(_baseUri, gemId.toString()));\\n  }\\n\\n  function setBaseUri(string memory newUri) public onlyOwner {\\n    _baseUri = newUri;\\n    emit UpdateBaseUri(newUri);\\n  }\\n\\n  function _setGemType(uint256 gemId, uint256 gemType) internal {\\n    _gemTypes[gemId] = gemType;\\n    emit GemTypeSet(gemId, gemType);\\n  }\\n\\n  function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n    return ownerOf[tokenId] != address(0);\\n  }\\n}\\n\",\"keccak256\":\"0x9a2fb8c17a2504034581850ee34ece08ebf87f1a07f3ae1621b06d41b8f3f1d1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526000600b553480156200001657600080fd5b5060405162001e3538038062001e35833981016040819052620000399162000281565b6040518060400160405280600381526020016247656d60e81b8152506040518060400160405280600381526020016247454d60e81b81525081600090805190602001906200008992919062000192565b5080516200009f90600190602084019062000192565b5050600680546001600160a01b03191633908117909155604051600092507faac18e3887f7d855b2483e20615f8e3fb6efc18e25502090082b47047fb57c73908390a3620000ed81620000f4565b50620003ab565b6006546001600160a01b03163314620001405760405162461bcd60e51b815260206004820152600a60248201526927b7363c9037bbb732b960b11b604482015260640160405180910390fd5b80516200015590600990602084019062000192565b507f157eb1fffc1000c7f0ee8cb1f87be2620ec910b8be9e3af7db8c97328e2757cf8160405162000187919062000339565b60405180910390a150565b828054620001a0906200036e565b90600052602060002090601f016020900481019282620001c457600085556200020f565b82601f10620001df57805160ff19168380011785556200020f565b828001600101855582156200020f579182015b828111156200020f578251825591602001919060010190620001f2565b506200021d92915062000221565b5090565b5b808211156200021d576000815560010162000222565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200026b57818101518382015260200162000251565b838111156200027b576000848401525b50505050565b6000602082840312156200029457600080fd5b81516001600160401b0380821115620002ac57600080fd5b818401915084601f830112620002c157600080fd5b815181811115620002d657620002d662000238565b604051601f8201601f19908116603f0116810190838211818310171562000301576200030162000238565b816040528281528760208487010111156200031b57600080fd5b6200032e8360208301602088016200024e565b979650505050505050565b60208152600082518060208401526200035a8160408501602087016200024e565b601f01601f19169190910160400192915050565b600181811c908216806200038357607f821691505b60208210811415620003a557634e487b7160e01b600052602260045260246000fd5b50919050565b611a7a80620003bb6000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80636cef16e6116100de578063a22cb46511610097578063b88d4fde11610071578063b88d4fde14610398578063c87b56dd146103ab578063d4ee1d90146103be578063e985e9c5146103d157600080fd5b8063a22cb4651461034f578063aa271e1a14610362578063ac5a7d5c1461038557600080fd5b80636cef16e6146102e657806370a08231146102ee5780638da5cb5b1461030e57806395d89b4114610321578063a0bcfc7f14610329578063a17391d01461033c57600080fd5b806323b872dd1161014b57806342842e0e1161012557806342842e0e146102845780634684d7e9146102975780636352211e146102aa57806369e2f0fb146102d357600080fd5b806323b872dd1461024b5780633dd1eb611461025e57806340c10f191461027157600080fd5b806301ffc9a714610193578063034601ec146101bb57806306fdde03146101d0578063081812fc146101e5578063095ea7b31461022657806318160ddd14610239575b600080fd5b6101a66101a13660046113a6565b6103ff565b60405190151581526020015b60405180910390f35b6101ce6101c93660046114ad565b610451565b005b6101d861048f565b6040516101b29190611563565b61020e6101f3366004611576565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101b2565b6101ce61023436600461158f565b61051d565b600b545b6040519081526020016101b2565b6101ce6102593660046115b9565b610604565b6101ce61026c3660046115f5565b6107cb565b6101ce61027f36600461158f565b6108e2565b6101ce6102923660046115b9565b61094a565b6101ce6102a5366004611610565b610a29565b61020e6102b8366004611576565b6003602052600090815260409020546001600160a01b031681565b6101ce6102e13660046115f5565b610abd565b6101ce610b86565b61023d6102fc3660046115f5565b60026020526000908152604090205481565b60065461020e906001600160a01b031681565b6101d8610c21565b6101ce6103373660046116b6565b610c2e565b61023d61034a366004611576565b610ca6565b6101ce61035d3660046116ff565b610d19565b6101a66103703660046115f5565b60086020526000908152604090205460ff1681565b6101ce6103933660046115f5565b610d85565b6101ce6103a636600461173b565b610e3f565b6101d86103b9366004611576565b610f0a565b60075461020e906001600160a01b031681565b6101a66103df3660046117b7565b600560209081526000928352604080842090915290825290205460ff1681565b60006301ffc9a760e01b6001600160e01b03198316148061043057506380ac58cd60e01b6001600160e01b03198316145b8061044b5750635b5e139f60e01b6001600160e01b03198316145b92915050565b60005b8151811015610489576104818484848481518110610474576104746117ea565b602002602001015161094a565b600101610454565b50505050565b6000805461049c90611800565b80601f01602080910402602001604051908101604052809291908181526020018280546104c890611800565b80156105155780601f106104ea57610100808354040283529160200191610515565b820191906000526020600020905b8154815290600101906020018083116104f857829003601f168201915b505050505081565b6000818152600360205260409020546001600160a01b03163381148061056657506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6105a85760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000818152600360205260409020546001600160a01b0384811691161461065a5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b604482015260640161059f565b6001600160a01b0382166106a45760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161059f565b336001600160a01b03841614806106d157506000818152600460205260409020546001600160a01b031633145b806106ff57506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b61073c5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161059f565b6001600160a01b0380841660008181526002602090815260408083208054600019019055938616808352848320805460010190558583526003825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b031633146107f55760405162461bcd60e51b815260040161059f9061183b565b6001600160a01b03811661083b5760405162461bcd60e51b815260206004820152600d60248201526c4e6f206164647265737328302960981b604482015260640161059f565b6001600160a01b03811660009081526008602052604090205460ff16156108965760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4819dc985b9d1959608a1b604482015260640161059f565b6001600160a01b038116600081815260086020526040808220805460ff19166001179055517fbd42b6cd963a984d8cbff85acad4dd2c87a6d85ac756d16e6d2ec5ce6c8f07309190a250565b3360009081526008602052604090205460ff1661092f5760405162461bcd60e51b815260206004820152600b60248201526a27b7363c9036b4b73a32b960a91b604482015260640161059f565b600b805460018101909155610945838284610f9f565b505050565b610955838383610604565b6001600160a01b0382163b1580610a0d5750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a401602060405180830381600087803b1580156109c957600080fd5b505af11580156109dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a01919061185f565b6001600160e01b031916145b6109455760405162461bcd60e51b815260040161059f9061187c565b3360009081526008602052604090205460ff16610a765760405162461bcd60e51b815260206004820152600b60248201526a27b7363c9036b4b73a32b960a91b604482015260640161059f565b600b5460005b8251811015610ab557610aa98483858481518110610a9c57610a9c6117ea565b6020026020010151610f9f565b60019182019101610a7c565b50600b555050565b6006546001600160a01b03163314610ae75760405162461bcd60e51b815260040161059f9061183b565b6001600160a01b03811660009081526008602052604090205460ff16610b3d5760405162461bcd60e51b815260206004820152600b60248201526a139bdd0819dc985b9d195960aa1b604482015260640161059f565b6001600160a01b038116600081815260086020526040808220805460ff19169055517ff474b72f3e21ebafdad7dadfcb99ae7eabdbf538d52a0e0eecbf8ce0fa7043fe9190a250565b6007546001600160a01b03163314610bd15760405162461bcd60e51b815260206004820152600e60248201526d27b7363c903732bb9037bbb732b960911b604482015260640161059f565b60068054336001600160a01b0319821681179092556040516001600160a01b03909116919082907faac18e3887f7d855b2483e20615f8e3fb6efc18e25502090082b47047fb57c7390600090a350565b6001805461049c90611800565b6006546001600160a01b03163314610c585760405162461bcd60e51b815260040161059f9061183b565b8051610c6b9060099060208401906112f4565b507f157eb1fffc1000c7f0ee8cb1f87be2620ec910b8be9e3af7db8c97328e2757cf81604051610c9b9190611563565b60405180910390a150565b6000818152600360205260408120546001600160a01b0316610d065760405162461bcd60e51b8152602060048201526019602482015278517565727920666f72206e6f6e6578697374656e742067656d60381b604482015260640161059f565b506000908152600a602052604090205490565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6006546001600160a01b03163314610daf5760405162461bcd60e51b815260040161059f9061183b565b6001600160a01b038116610df55760405162461bcd60e51b815260206004820152600d60248201526c4e6f206164647265737328302960981b604482015260640161059f565b600780546001600160a01b0319166001600160a01b0383169081179091556040517fd52a054f85e9a057277cd95bf6d5da45465068f0467ec7991f3fcc017be6b72590600090a250565b610e4a848484610604565b6001600160a01b0383163b1580610eee5750604051630a85bd0160e11b808252906001600160a01b0385169063150b7a0290610e909033908990889088906004016118a6565b602060405180830381600087803b158015610eaa57600080fd5b505af1158015610ebe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee2919061185f565b6001600160e01b031916145b6104895760405162461bcd60e51b815260040161059f9061187c565b6000818152600360205260409020546060906001600160a01b0316610f6d5760405162461bcd60e51b8152602060048201526019602482015278517565727920666f72206e6f6e6578697374656e742067656d60381b604482015260640161059f565b6009610f7883610fb3565b604051602001610f899291906118ff565b6040516020818303038152906040529050919050565b610fa983836110b9565b6109458282611198565b606081610fd75750506040805180820190915260018152600360fc1b602082015290565b8160005b81156110015780610feb816119bc565b9150610ffa9050600a836119ed565b9150610fdb565b60008167ffffffffffffffff81111561101c5761101c6113e6565b6040519080825280601f01601f191660200182016040528015611046576020820181803683370190505b5090505b84156110b15761105b600183611a01565b9150611068600a86611a18565b611073906030611a2c565b60f81b818381518110611088576110886117ea565b60200101906001600160f81b031916908160001a9053506110aa600a866119ed565b945061104a565b949350505050565b6110c382826111e9565b6001600160a01b0382163b15806111785750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a401602060405180830381600087803b15801561113457600080fd5b505af1158015611148573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116c919061185f565b6001600160e01b031916145b6111945760405162461bcd60e51b815260040161059f9061187c565b5050565b6000828152600a6020526040908190208290555182907f5162e286b586517af78b830db06652a2f5bad8af6b5b6492b7960afd3f2e8e0c906111dd9084815260200190565b60405180910390a25050565b6001600160a01b0382166112335760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161059f565b6000818152600360205260409020546001600160a01b0316156112895760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b604482015260640161059f565b6001600160a01b038216600081815260026020908152604080832080546001019055848352600390915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b82805461130090611800565b90600052602060002090601f0160209004810192826113225760008555611368565b82601f1061133b57805160ff1916838001178555611368565b82800160010185558215611368579182015b8281111561136857825182559160200191906001019061134d565b50611374929150611378565b5090565b5b808211156113745760008155600101611379565b6001600160e01b0319811681146113a357600080fd5b50565b6000602082840312156113b857600080fd5b81356113c38161138d565b9392505050565b80356001600160a01b03811681146113e157600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611425576114256113e6565b604052919050565b600082601f83011261143e57600080fd5b8135602067ffffffffffffffff82111561145a5761145a6113e6565b8160051b6114698282016113fc565b928352848101820192828101908785111561148357600080fd5b83870192505b848310156114a257823582529183019190830190611489565b979650505050505050565b6000806000606084860312156114c257600080fd5b6114cb846113ca565b92506114d9602085016113ca565b9150604084013567ffffffffffffffff8111156114f557600080fd5b6115018682870161142d565b9150509250925092565b60005b8381101561152657818101518382015260200161150e565b838111156104895750506000910152565b6000815180845261154f81602086016020860161150b565b601f01601f19169290920160200192915050565b6020815260006113c36020830184611537565b60006020828403121561158857600080fd5b5035919050565b600080604083850312156115a257600080fd5b6115ab836113ca565b946020939093013593505050565b6000806000606084860312156115ce57600080fd5b6115d7846113ca565b92506115e5602085016113ca565b9150604084013590509250925092565b60006020828403121561160757600080fd5b6113c3826113ca565b6000806040838503121561162357600080fd5b61162c836113ca565b9150602083013567ffffffffffffffff81111561164857600080fd5b6116548582860161142d565b9150509250929050565b600067ffffffffffffffff831115611678576116786113e6565b61168b601f8401601f19166020016113fc565b905082815283838301111561169f57600080fd5b828260208301376000602084830101529392505050565b6000602082840312156116c857600080fd5b813567ffffffffffffffff8111156116df57600080fd5b8201601f810184136116f057600080fd5b6110b18482356020840161165e565b6000806040838503121561171257600080fd5b61171b836113ca565b91506020830135801515811461173057600080fd5b809150509250929050565b6000806000806080858703121561175157600080fd5b61175a856113ca565b9350611768602086016113ca565b925060408501359150606085013567ffffffffffffffff81111561178b57600080fd5b8501601f8101871361179c57600080fd5b6117ab8782356020840161165e565b91505092959194509250565b600080604083850312156117ca57600080fd5b6117d3836113ca565b91506117e1602084016113ca565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b600181811c9082168061181457607f821691505b6020821081141561183557634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600a908201526927b7363c9037bbb732b960b11b604082015260600190565b60006020828403121561187157600080fd5b81516113c38161138d565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906118d990830184611537565b9695505050505050565b600081516118f581856020860161150b565b9290920192915050565b600080845481600182811c91508083168061191b57607f831692505b602080841082141561193b57634e487b7160e01b86526022600452602486fd5b81801561194f57600181146119605761198d565b60ff1986168952848901965061198d565b60008b81526020902060005b868110156119855781548b82015290850190830161196c565b505084890196505b50505050505061199d81856118e3565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b60006000198214156119d0576119d06119a6565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826119fc576119fc6119d7565b500490565b600082821015611a1357611a136119a6565b500390565b600082611a2757611a276119d7565b500690565b60008219821115611a3f57611a3f6119a6565b50019056fea26469706673582212205e5b51f0c4791ff8e0b1a8d0e93c2f8ea576e4cf24d1263a51d092ac90320f6764736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061018e5760003560e01c80636cef16e6116100de578063a22cb46511610097578063b88d4fde11610071578063b88d4fde14610398578063c87b56dd146103ab578063d4ee1d90146103be578063e985e9c5146103d157600080fd5b8063a22cb4651461034f578063aa271e1a14610362578063ac5a7d5c1461038557600080fd5b80636cef16e6146102e657806370a08231146102ee5780638da5cb5b1461030e57806395d89b4114610321578063a0bcfc7f14610329578063a17391d01461033c57600080fd5b806323b872dd1161014b57806342842e0e1161012557806342842e0e146102845780634684d7e9146102975780636352211e146102aa57806369e2f0fb146102d357600080fd5b806323b872dd1461024b5780633dd1eb611461025e57806340c10f191461027157600080fd5b806301ffc9a714610193578063034601ec146101bb57806306fdde03146101d0578063081812fc146101e5578063095ea7b31461022657806318160ddd14610239575b600080fd5b6101a66101a13660046113a6565b6103ff565b60405190151581526020015b60405180910390f35b6101ce6101c93660046114ad565b610451565b005b6101d861048f565b6040516101b29190611563565b61020e6101f3366004611576565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101b2565b6101ce61023436600461158f565b61051d565b600b545b6040519081526020016101b2565b6101ce6102593660046115b9565b610604565b6101ce61026c3660046115f5565b6107cb565b6101ce61027f36600461158f565b6108e2565b6101ce6102923660046115b9565b61094a565b6101ce6102a5366004611610565b610a29565b61020e6102b8366004611576565b6003602052600090815260409020546001600160a01b031681565b6101ce6102e13660046115f5565b610abd565b6101ce610b86565b61023d6102fc3660046115f5565b60026020526000908152604090205481565b60065461020e906001600160a01b031681565b6101d8610c21565b6101ce6103373660046116b6565b610c2e565b61023d61034a366004611576565b610ca6565b6101ce61035d3660046116ff565b610d19565b6101a66103703660046115f5565b60086020526000908152604090205460ff1681565b6101ce6103933660046115f5565b610d85565b6101ce6103a636600461173b565b610e3f565b6101d86103b9366004611576565b610f0a565b60075461020e906001600160a01b031681565b6101a66103df3660046117b7565b600560209081526000928352604080842090915290825290205460ff1681565b60006301ffc9a760e01b6001600160e01b03198316148061043057506380ac58cd60e01b6001600160e01b03198316145b8061044b5750635b5e139f60e01b6001600160e01b03198316145b92915050565b60005b8151811015610489576104818484848481518110610474576104746117ea565b602002602001015161094a565b600101610454565b50505050565b6000805461049c90611800565b80601f01602080910402602001604051908101604052809291908181526020018280546104c890611800565b80156105155780601f106104ea57610100808354040283529160200191610515565b820191906000526020600020905b8154815290600101906020018083116104f857829003601f168201915b505050505081565b6000818152600360205260409020546001600160a01b03163381148061056657506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6105a85760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000818152600360205260409020546001600160a01b0384811691161461065a5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b604482015260640161059f565b6001600160a01b0382166106a45760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161059f565b336001600160a01b03841614806106d157506000818152600460205260409020546001600160a01b031633145b806106ff57506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b61073c5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161059f565b6001600160a01b0380841660008181526002602090815260408083208054600019019055938616808352848320805460010190558583526003825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b031633146107f55760405162461bcd60e51b815260040161059f9061183b565b6001600160a01b03811661083b5760405162461bcd60e51b815260206004820152600d60248201526c4e6f206164647265737328302960981b604482015260640161059f565b6001600160a01b03811660009081526008602052604090205460ff16156108965760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4819dc985b9d1959608a1b604482015260640161059f565b6001600160a01b038116600081815260086020526040808220805460ff19166001179055517fbd42b6cd963a984d8cbff85acad4dd2c87a6d85ac756d16e6d2ec5ce6c8f07309190a250565b3360009081526008602052604090205460ff1661092f5760405162461bcd60e51b815260206004820152600b60248201526a27b7363c9036b4b73a32b960a91b604482015260640161059f565b600b805460018101909155610945838284610f9f565b505050565b610955838383610604565b6001600160a01b0382163b1580610a0d5750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a401602060405180830381600087803b1580156109c957600080fd5b505af11580156109dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a01919061185f565b6001600160e01b031916145b6109455760405162461bcd60e51b815260040161059f9061187c565b3360009081526008602052604090205460ff16610a765760405162461bcd60e51b815260206004820152600b60248201526a27b7363c9036b4b73a32b960a91b604482015260640161059f565b600b5460005b8251811015610ab557610aa98483858481518110610a9c57610a9c6117ea565b6020026020010151610f9f565b60019182019101610a7c565b50600b555050565b6006546001600160a01b03163314610ae75760405162461bcd60e51b815260040161059f9061183b565b6001600160a01b03811660009081526008602052604090205460ff16610b3d5760405162461bcd60e51b815260206004820152600b60248201526a139bdd0819dc985b9d195960aa1b604482015260640161059f565b6001600160a01b038116600081815260086020526040808220805460ff19169055517ff474b72f3e21ebafdad7dadfcb99ae7eabdbf538d52a0e0eecbf8ce0fa7043fe9190a250565b6007546001600160a01b03163314610bd15760405162461bcd60e51b815260206004820152600e60248201526d27b7363c903732bb9037bbb732b960911b604482015260640161059f565b60068054336001600160a01b0319821681179092556040516001600160a01b03909116919082907faac18e3887f7d855b2483e20615f8e3fb6efc18e25502090082b47047fb57c7390600090a350565b6001805461049c90611800565b6006546001600160a01b03163314610c585760405162461bcd60e51b815260040161059f9061183b565b8051610c6b9060099060208401906112f4565b507f157eb1fffc1000c7f0ee8cb1f87be2620ec910b8be9e3af7db8c97328e2757cf81604051610c9b9190611563565b60405180910390a150565b6000818152600360205260408120546001600160a01b0316610d065760405162461bcd60e51b8152602060048201526019602482015278517565727920666f72206e6f6e6578697374656e742067656d60381b604482015260640161059f565b506000908152600a602052604090205490565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6006546001600160a01b03163314610daf5760405162461bcd60e51b815260040161059f9061183b565b6001600160a01b038116610df55760405162461bcd60e51b815260206004820152600d60248201526c4e6f206164647265737328302960981b604482015260640161059f565b600780546001600160a01b0319166001600160a01b0383169081179091556040517fd52a054f85e9a057277cd95bf6d5da45465068f0467ec7991f3fcc017be6b72590600090a250565b610e4a848484610604565b6001600160a01b0383163b1580610eee5750604051630a85bd0160e11b808252906001600160a01b0385169063150b7a0290610e909033908990889088906004016118a6565b602060405180830381600087803b158015610eaa57600080fd5b505af1158015610ebe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee2919061185f565b6001600160e01b031916145b6104895760405162461bcd60e51b815260040161059f9061187c565b6000818152600360205260409020546060906001600160a01b0316610f6d5760405162461bcd60e51b8152602060048201526019602482015278517565727920666f72206e6f6e6578697374656e742067656d60381b604482015260640161059f565b6009610f7883610fb3565b604051602001610f899291906118ff565b6040516020818303038152906040529050919050565b610fa983836110b9565b6109458282611198565b606081610fd75750506040805180820190915260018152600360fc1b602082015290565b8160005b81156110015780610feb816119bc565b9150610ffa9050600a836119ed565b9150610fdb565b60008167ffffffffffffffff81111561101c5761101c6113e6565b6040519080825280601f01601f191660200182016040528015611046576020820181803683370190505b5090505b84156110b15761105b600183611a01565b9150611068600a86611a18565b611073906030611a2c565b60f81b818381518110611088576110886117ea565b60200101906001600160f81b031916908160001a9053506110aa600a866119ed565b945061104a565b949350505050565b6110c382826111e9565b6001600160a01b0382163b15806111785750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a401602060405180830381600087803b15801561113457600080fd5b505af1158015611148573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116c919061185f565b6001600160e01b031916145b6111945760405162461bcd60e51b815260040161059f9061187c565b5050565b6000828152600a6020526040908190208290555182907f5162e286b586517af78b830db06652a2f5bad8af6b5b6492b7960afd3f2e8e0c906111dd9084815260200190565b60405180910390a25050565b6001600160a01b0382166112335760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161059f565b6000818152600360205260409020546001600160a01b0316156112895760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b604482015260640161059f565b6001600160a01b038216600081815260026020908152604080832080546001019055848352600390915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b82805461130090611800565b90600052602060002090601f0160209004810192826113225760008555611368565b82601f1061133b57805160ff1916838001178555611368565b82800160010185558215611368579182015b8281111561136857825182559160200191906001019061134d565b50611374929150611378565b5090565b5b808211156113745760008155600101611379565b6001600160e01b0319811681146113a357600080fd5b50565b6000602082840312156113b857600080fd5b81356113c38161138d565b9392505050565b80356001600160a01b03811681146113e157600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611425576114256113e6565b604052919050565b600082601f83011261143e57600080fd5b8135602067ffffffffffffffff82111561145a5761145a6113e6565b8160051b6114698282016113fc565b928352848101820192828101908785111561148357600080fd5b83870192505b848310156114a257823582529183019190830190611489565b979650505050505050565b6000806000606084860312156114c257600080fd5b6114cb846113ca565b92506114d9602085016113ca565b9150604084013567ffffffffffffffff8111156114f557600080fd5b6115018682870161142d565b9150509250925092565b60005b8381101561152657818101518382015260200161150e565b838111156104895750506000910152565b6000815180845261154f81602086016020860161150b565b601f01601f19169290920160200192915050565b6020815260006113c36020830184611537565b60006020828403121561158857600080fd5b5035919050565b600080604083850312156115a257600080fd5b6115ab836113ca565b946020939093013593505050565b6000806000606084860312156115ce57600080fd5b6115d7846113ca565b92506115e5602085016113ca565b9150604084013590509250925092565b60006020828403121561160757600080fd5b6113c3826113ca565b6000806040838503121561162357600080fd5b61162c836113ca565b9150602083013567ffffffffffffffff81111561164857600080fd5b6116548582860161142d565b9150509250929050565b600067ffffffffffffffff831115611678576116786113e6565b61168b601f8401601f19166020016113fc565b905082815283838301111561169f57600080fd5b828260208301376000602084830101529392505050565b6000602082840312156116c857600080fd5b813567ffffffffffffffff8111156116df57600080fd5b8201601f810184136116f057600080fd5b6110b18482356020840161165e565b6000806040838503121561171257600080fd5b61171b836113ca565b91506020830135801515811461173057600080fd5b809150509250929050565b6000806000806080858703121561175157600080fd5b61175a856113ca565b9350611768602086016113ca565b925060408501359150606085013567ffffffffffffffff81111561178b57600080fd5b8501601f8101871361179c57600080fd5b6117ab8782356020840161165e565b91505092959194509250565b600080604083850312156117ca57600080fd5b6117d3836113ca565b91506117e1602084016113ca565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b600181811c9082168061181457607f821691505b6020821081141561183557634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600a908201526927b7363c9037bbb732b960b11b604082015260600190565b60006020828403121561187157600080fd5b81516113c38161138d565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906118d990830184611537565b9695505050505050565b600081516118f581856020860161150b565b9290920192915050565b600080845481600182811c91508083168061191b57607f831692505b602080841082141561193b57634e487b7160e01b86526022600452602486fd5b81801561194f57600181146119605761198d565b60ff1986168952848901965061198d565b60008b81526020902060005b868110156119855781548b82015290850190830161196c565b505084890196505b50505050505061199d81856118e3565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b60006000198214156119d0576119d06119a6565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826119fc576119fc6119d7565b500490565b600082821015611a1357611a136119a6565b500390565b600082611a2757611a276119d7565b500690565b60008219821115611a3f57611a3f6119a6565b50019056fea26469706673582212205e5b51f0c4791ff8e0b1a8d0e93c2f8ea576e4cf24d1263a51d092ac90320f6764736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4541,
        "contract": "contracts/Gem.sol:Gem",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 4543,
        "contract": "contracts/Gem.sol:Gem",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 4554,
        "contract": "contracts/Gem.sol:Gem",
        "label": "balanceOf",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 4558,
        "contract": "contracts/Gem.sol:Gem",
        "label": "ownerOf",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 4562,
        "contract": "contracts/Gem.sol:Gem",
        "label": "getApproved",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 4568,
        "contract": "contracts/Gem.sol:Gem",
        "label": "isApprovedForAll",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 5032,
        "contract": "contracts/Gem.sol:Gem",
        "label": "owner",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 5034,
        "contract": "contracts/Gem.sol:Gem",
        "label": "newOwner",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 5038,
        "contract": "contracts/Gem.sol:Gem",
        "label": "isMinter",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 6646,
        "contract": "contracts/Gem.sol:Gem",
        "label": "_baseUri",
        "offset": 0,
        "slot": "9",
        "type": "t_string_storage"
      },
      {
        "astId": 6650,
        "contract": "contracts/Gem.sol:Gem",
        "label": "_gemTypes",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 6486,
        "contract": "contracts/Gem.sol:Gem",
        "label": "_gemIdCounter",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}