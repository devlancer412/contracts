{
  "address": "0xAefcA2FaA182C8934bf509b58eE06556aCA4DC63",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "usdc_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "egg_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "signer_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minted_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cap",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "openingTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "closingTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "whitelist",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cashback",
          "type": "uint256"
        }
      ],
      "name": "EggSaleSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "MaticCashback",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "MaticCashbackFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerPulled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "pushedOwner",
          "type": "address"
        }
      ],
      "name": "OwnerPushed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Purchase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "amount",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "nonce",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            }
          ],
          "internalType": "struct RoosterEggSale.Sig",
          "name": "sig",
          "type": "tuple"
        }
      ],
      "name": "buyEggs",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "egg",
      "outputs": [
        {
          "internalType": "contract Egg",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eggsale",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "supply",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "cap",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "sold",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "openingTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "closingTime",
          "type": "uint32"
        },
        {
          "internalType": "bool",
          "name": "whitelist",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cashback",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantMinterRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mintEggs",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "newOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pullOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "purchasedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "pushOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeMinterRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "baseURI_",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "openingTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "closingTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "supply",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "cap",
          "type": "uint32"
        },
        {
          "internalType": "bool",
          "name": "whitelist",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cashback",
          "type": "uint256"
        }
      ],
      "name": "setEggSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "signer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdc",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawMatic",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x64b1949ceb329d0455c45b503a840225f7df869dad3683cfe9632ceb91a3ac13",
  "receipt": {
    "to": null,
    "from": "0x374180e6E1b14454C18e44b635A95e7d37160570",
    "contractAddress": "0xAefcA2FaA182C8934bf509b58eE06556aCA4DC63",
    "transactionIndex": 19,
    "gasUsed": "1554895",
    "logsBloom": "0x
    "blockHash": "0x5bebef56d93d2efd806890599c6913ae25d866f93c5778780073056d233c95bc",
    "transactionHash": "0x64b1949ceb329d0455c45b503a840225f7df869dad3683cfe9632ceb91a3ac13",
    "logs": [
      {
        "transactionIndex": 19,
        "blockNumber": 10408326,
        "transactionHash": "0x64b1949ceb329d0455c45b503a840225f7df869dad3683cfe9632ceb91a3ac13",
        "address": "0xAefcA2FaA182C8934bf509b58eE06556aCA4DC63",
        "topics": [
          "0xaac18e3887f7d855b2483e20615f8e3fb6efc18e25502090082b47047fb57c73",
          "0x000000000000000000000000374180e6e1b14454c18e44b635a95e7d37160570",
          "0x0000000000000000000000000000000000000000000000000000000000000000"
        ],
        "data": "0x",
        "logIndex": 27,
        "blockHash": "0x5bebef56d93d2efd806890599c6913ae25d866f93c5778780073056d233c95bc"
      }
    ],
    "blockNumber": 10408326,
    "cumulativeGasUsed": "4115327",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xF54F493A2fE3D03bDB7474ddb5AA103eedE8A81C",
    "0x5304651fbC23801177c81734d2be6C669e8f9e82",
    "0x18bF4D2Da2A03134834107F7cCF2cEA2d6bdbbCc",
    "0xF29d77D06CA620558bD8C00E272D70502C35f497",
    52
  ],
  "numDeployments": 3,
  "solcInputHash": "73545f6ca06f03b61659eb24ad9d44ec",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usdc_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"egg_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minted_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"openingTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"closingTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"whitelist\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cashback\",\"type\":\"uint256\"}],\"name\":\"EggSaleSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MaticCashback\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"MaticCashbackFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pushedOwner\",\"type\":\"address\"}],\"name\":\"OwnerPushed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Purchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"amount\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"internalType\":\"struct RoosterEggSale.Sig\",\"name\":\"sig\",\"type\":\"tuple\"}],\"name\":\"buyEggs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"egg\",\"outputs\":[{\"internalType\":\"contract Egg\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eggsale\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"supply\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"cap\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"sold\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"openingTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"closingTime\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"whitelist\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashback\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantMinterRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintEggs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"purchasedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"pushOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeMinterRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseURI_\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"openingTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"closingTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"supply\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"cap\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"whitelist\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashback\",\"type\":\"uint256\"}],\"name\":\"setEggSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdc\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawMatic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EggSale.sol\":\"RoosterEggSale\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {Pausable} from \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\n\\ncontract AccessControl is Pausable {\\n  //Address of current owner\\n  address public owner;\\n  //Address of new owner (Note: new owner must pull to be an owner)\\n  address public newOwner;\\n  //Maps if user has minter role\\n  mapping(address => bool) public isMinter;\\n\\n  //Fires when new owner is pushed\\n  event OwnerPushed(address indexed pushedOwner);\\n  //Fires when new owner pulled\\n  event OwnerPulled(address indexed previousOwner, address indexed newOwner);\\n  //Fires when minter role is granted\\n  event MinterRoleGranted(address indexed account);\\n  //Fires when minter role is revoked\\n  event MinterRoleRevoked(address indexed account);\\n\\n  constructor() {\\n    owner = msg.sender;\\n    emit OwnerPulled(msg.sender, address(0));\\n  }\\n\\n  modifier onlyOwner() {\\n    require(msg.sender == owner, \\\"Only owner\\\");\\n    _;\\n  }\\n\\n  modifier onlyMinter() {\\n    require(isMinter[msg.sender], \\\"Only minter\\\");\\n    _;\\n  }\\n\\n  function pushOwner(address account) public onlyOwner {\\n    require(account != address(0), \\\"No address(0)\\\");\\n    newOwner = account;\\n    emit OwnerPushed(account);\\n  }\\n\\n  function pullOwner() external {\\n    require(msg.sender == newOwner, \\\"Only new owner\\\");\\n    address oldOwner = owner;\\n    owner = msg.sender;\\n    emit OwnerPulled(oldOwner, msg.sender);\\n  }\\n\\n  function grantMinterRole(address account) external onlyOwner {\\n    require(account != address(0), \\\"No address(0)\\\");\\n    require(!isMinter[account], \\\"Already granted\\\");\\n    isMinter[account] = true;\\n    emit MinterRoleGranted(account);\\n  }\\n\\n  function revokeMinterRole(address account) external onlyOwner {\\n    require(isMinter[account], \\\"Not granted\\\");\\n    isMinter[account] = false;\\n    emit MinterRoleRevoked(account);\\n  }\\n\\n  function pause() external onlyOwner {\\n    _pause();\\n  }\\n\\n  function unpause() external onlyOwner {\\n    _unpause();\\n  }\\n}\\n\",\"keccak256\":\"0x950a25e8ab43339c7f5e8fc55d80466264b2698d084c56c877868977440bf9d6\",\"license\":\"MIT\"},\"contracts/EggSale.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./AccessControl.sol\\\";\\n//\\n\\ninterface Egg {\\n  function mintEggs(address to, uint256 amount) external;\\n\\n  function setBaseURI(string memory baseURI_) external;\\n\\n  function purchasedAmount(address user) external view returns (uint8);\\n}\\n\\n//solhint-disable avoid-low-level-calls\\ncontract RoosterEggSale is AccessControl {\\n  //EggSale struct\\n  EggSale public eggsale;\\n\\n  //RoosterEgg address\\n  Egg public immutable egg;\\n\\n  //USDC address\\n  IERC20 public immutable usdc;\\n\\n  //Vault address\\n  address public immutable vault;\\n\\n  //Whitelist verification signer address\\n  address public immutable signer;\\n\\n  //Total minted\\n  uint256 public minted;\\n\\n  //Max supply of eggs\\n  uint256 public constant maxSupply = 150_000;\\n\\n  //User egg purchased amount (user => amount)\\n  mapping(address => uint256) public purchasedAmount;\\n  //Check if nonce is used (nonce => boolean)\\n  mapping(bytes32 => bool) private _nonceUsed;\\n\\n  event Purchase(address indexed purchaser, uint256 amount, uint256 value);\\n  event EggSaleSet(\\n    uint256 supply,\\n    uint256 cap,\\n    uint256 openingTime,\\n    uint256 closingTime,\\n    bool whitelist,\\n    uint256 price,\\n    uint256 cashback\\n  );\\n  event MaticCashback(address user, uint256 amount);\\n  event MaticCashbackFailed(address indexed user, uint256 balance);\\n\\n  struct EggSale {\\n    uint32 supply;\\n    uint32 cap;\\n    uint32 sold;\\n    uint32 openingTime;\\n    uint32 closingTime;\\n    bool whitelist;\\n    uint256 price;\\n    uint256 cashback;\\n  }\\n\\n  struct Sig {\\n    bytes32 r;\\n    bytes32 s;\\n    uint8 v;\\n  }\\n\\n  constructor(\\n    address usdc_,\\n    address egg_,\\n    address vault_,\\n    address signer_,\\n    uint256 minted_\\n  ) {\\n    usdc = IERC20(usdc_);\\n    egg = Egg(egg_);\\n    vault = vault_;\\n    signer = signer_;\\n    minted = minted_;\\n  }\\n\\n  receive() external payable {}\\n\\n  function isOpen() public view returns (bool) {\\n    return block.timestamp >= eggsale.openingTime && block.timestamp < eggsale.closingTime;\\n  }\\n\\n  function buyEggs(\\n    uint8 amount,\\n    bytes32 nonce,\\n    Sig calldata sig\\n  ) external whenNotPaused {\\n    address purchaser = msg.sender;\\n    uint256 value = eggsale.price * amount;\\n    uint256 cashbackAmount = eggsale.cashback * amount;\\n\\n    //Basic chekcs\\n    require(isOpen(), \\\"Not open\\\");\\n    require(minted + amount <= maxSupply, \\\"Exceeds max supply\\\");\\n    require(eggsale.sold + amount <= eggsale.supply, \\\"Exceeds supply\\\");\\n    require(\\n      purchasedAmount[purchaser] + egg.purchasedAmount(purchaser) + amount <= eggsale.cap,\\n      \\\"Exceeds cap\\\"\\n    );\\n\\n    //Whitelist check\\n    if (eggsale.whitelist) {\\n      require(!_nonceUsed[nonce], \\\"Nonce used\\\");\\n      require(_isWhitelisted(purchaser, nonce, sig), \\\"Not whitelisted\\\");\\n      _nonceUsed[nonce] = true;\\n    }\\n\\n    //Effects\\n    unchecked {\\n      minted += amount;\\n      eggsale.sold += amount;\\n      purchasedAmount[purchaser] += amount;\\n    }\\n\\n    //Interactions\\n    usdc.transferFrom(purchaser, vault, value);\\n\\n    egg.mintEggs(purchaser, amount);\\n\\n    if (cashbackAmount > 0) {\\n      (bool success, ) = payable(purchaser).call{value: cashbackAmount}(\\\"\\\");\\n      if (success) {\\n        emit MaticCashback(purchaser, cashbackAmount);\\n      } else {\\n        emit MaticCashbackFailed(purchaser, address(this).balance);\\n      }\\n    }\\n\\n    emit Purchase(purchaser, amount, value);\\n  }\\n\\n  function _isWhitelisted(\\n    address user,\\n    bytes32 nonce,\\n    Sig calldata sig\\n  ) private view returns (bool) {\\n    bytes32 messageHash = keccak256(abi.encodePacked(user, nonce));\\n    bytes32 ethSignedMessageHash = keccak256(\\n      abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", messageHash)\\n    );\\n\\n    return ecrecover(ethSignedMessageHash, sig.v, sig.r, sig.s) == signer;\\n  }\\n\\n  /* Only owner functions */\\n\\n  function setEggSale(\\n    uint32 openingTime,\\n    uint32 closingTime,\\n    uint32 supply,\\n    uint32 cap,\\n    bool whitelist,\\n    uint256 price,\\n    uint256 cashback\\n  ) external onlyOwner {\\n    require(closingTime >= openingTime, \\\"Closing time < Opening time\\\");\\n\\n    if (!isOpen()) {\\n      require(openingTime > block.timestamp, \\\"Invalid opening time\\\");\\n      eggsale.openingTime = openingTime;\\n      eggsale.sold = 0;\\n    }\\n\\n    eggsale.closingTime = closingTime;\\n    eggsale.supply = supply;\\n    eggsale.cap = cap;\\n    eggsale.whitelist = whitelist;\\n    eggsale.price = price;\\n    eggsale.cashback = cashback;\\n\\n    emit EggSaleSet(supply, cap, openingTime, closingTime, whitelist, price, cashback);\\n  }\\n\\n  function mintEggs(address to, uint256 amount) external onlyMinter {\\n    require(minted + amount <= maxSupply, \\\"Exceeds max supply\\\");\\n    unchecked {\\n      minted += amount;\\n    }\\n    egg.mintEggs(to, amount);\\n  }\\n\\n  function setBaseURI(string memory baseURI_) external onlyOwner {\\n    egg.setBaseURI(baseURI_);\\n  }\\n\\n  function withdrawMatic(uint256 amount) external onlyOwner {\\n    (bool success, ) = payable(vault).call{value: amount}(\\\"\\\");\\n    require(success, \\\"Withdraw failed\\\");\\n  }\\n}\\n\",\"keccak256\":\"0xc9b810a61a2fe404b5b3cf70b33f7f724e203241d9dc868e2051eb6b890d45c4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6101006040523480156200001257600080fd5b5060405162001bdf38038062001bdf8339810160408190526200003591620000be565b600080546001600160a81b031916610100339081029190911782556040517faac18e3887f7d855b2483e20615f8e3fb6efc18e25502090082b47047fb57c73908390a36001600160a01b0394851660a05292841660805290831660c05290911660e05260065562000125565b80516001600160a01b0381168114620000b957600080fd5b919050565b600080600080600060a08688031215620000d757600080fd5b620000e286620000a1565b9450620000f260208701620000a1565b93506200010260408701620000a1565b92506200011260608701620000a1565b9150608086015190509295509295909350565b60805160a05160c05160e051611a48620001976000396000818161016d01526115dd01526000818161052b01528181610eeb015261124e0152600081816101e00152610f1a0152600081816104800152818161072601528181610cd301528181610fbf01526113d30152611a486000f3fe60806040526004361061014f5760003560e01c80636cef16e6116100b6578063c06abfc71161006f578063c06abfc71461046e578063d4ee1d90146104a2578063d5abeb01146104c2578063e8a379b2146104d9578063ec0d16a1146104f9578063fbfa77cf1461051957600080fd5b80636cef16e6146103af5780638456cb59146103c45780638da5cb5b146103d957806397efc5a1146103fe578063aa271e1a1461041e578063ac5a7d5c1461044e57600080fd5b80634f02c420116101085780634f02c4201461027757806355f804b31461028d57806358a83fbc146102ad5780635c975abb146102cd57806364df8975146102e557806369e2f0fb1461038f57600080fd5b8063238ac9331461015b5780633dd1eb61146101ac5780633e413bee146101ce5780633f4ba83a1461020257806344c4dcc11461021757806347535d7b1461025257600080fd5b3661015657005b600080fd5b34801561016757600080fd5b5061018f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101b857600080fd5b506101cc6101c73660046116a8565b61054d565b005b3480156101da57600080fd5b5061018f7f000000000000000000000000000000000000000000000000000000000000000081565b34801561020e57600080fd5b506101cc610672565b34801561022357600080fd5b506102446102323660046116a8565b60076020526000908152604090205481565b6040519081526020016101a3565b34801561025e57600080fd5b506102676106ab565b60405190151581526020016101a3565b34801561028357600080fd5b5061024460065481565b34801561029957600080fd5b506101cc6102a83660046116e0565b6106e0565b3480156102b957600080fd5b506101cc6102c83660046117b6565b610790565b3480156102d957600080fd5b5060005460ff16610267565b3480156102f157600080fd5b5060035460045460055461033f9263ffffffff808216936401000000008304821693600160401b8404831693600160601b8104841693600160801b82041692600160a01b90910460ff169188565b6040805163ffffffff998a16815297891660208901529588169587019590955292861660608601529416608084015292151560a083015260c082019290925260e0810191909152610100016101a3565b34801561039b57600080fd5b506101cc6103aa3660046116a8565b610983565b3480156103bb57600080fd5b506101cc610a51565b3480156103d057600080fd5b506101cc610af1565b3480156103e557600080fd5b5060005461018f9061010090046001600160a01b031681565b34801561040a57600080fd5b506101cc610419366004611840565b610b28565b34801561042a57600080fd5b506102676104393660046116a8565b60026020526000908152604090205460ff1681565b34801561045a57600080fd5b506101cc6104693660046116a8565b61115c565b34801561047a57600080fd5b5061018f7f000000000000000000000000000000000000000000000000000000000000000081565b3480156104ae57600080fd5b5060015461018f906001600160a01b031681565b3480156104ce57600080fd5b50610244620249f081565b3480156104e557600080fd5b506101cc6104f436600461188a565b61121b565b34801561050557600080fd5b506101cc6105143660046118a3565b611303565b34801561052557600080fd5b5061018f7f000000000000000000000000000000000000000000000000000000000000000081565b60005461010090046001600160a01b031633146105855760405162461bcd60e51b815260040161057c906118cd565b60405180910390fd5b6001600160a01b0381166105cb5760405162461bcd60e51b815260206004820152600d60248201526c4e6f206164647265737328302960981b604482015260640161057c565b6001600160a01b03811660009081526002602052604090205460ff16156106265760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4819dc985b9d1959608a1b604482015260640161057c565b6001600160a01b038116600081815260026020526040808220805460ff19166001179055517fbd42b6cd963a984d8cbff85acad4dd2c87a6d85ac756d16e6d2ec5ce6c8f07309190a250565b60005461010090046001600160a01b031633146106a15760405162461bcd60e51b815260040161057c906118cd565b6106a9611433565b565b600354600090600160601b900463ffffffff1642108015906106db5750600354600160801b900463ffffffff1642105b905090565b60005461010090046001600160a01b0316331461070f5760405162461bcd60e51b815260040161057c906118cd565b6040516355f804b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906355f804b39061075b9084906004016118f1565b600060405180830381600087803b15801561077557600080fd5b505af1158015610789573d6000803e3d6000fd5b5050505050565b60005461010090046001600160a01b031633146107bf5760405162461bcd60e51b815260040161057c906118cd565b8663ffffffff168663ffffffff16101561081b5760405162461bcd60e51b815260206004820152601b60248201527f436c6f73696e672074696d65203c204f70656e696e672074696d650000000000604482015260640161057c565b6108236106ab565b6108a557428763ffffffff16116108735760405162461bcd60e51b8152602060048201526014602482015273496e76616c6964206f70656e696e672074696d6560601b604482015260640161057c565b600380546fffffffffffffffff00000000000000001916600160601b63ffffffff8a160263ffffffff60401b19161790555b6003805463ffffffff87811673ffffffff0000000000000000ffffffffffffffff19909216600160801b8a831690810267ffffffffffffffff19169190911783176401000000008984169081029190911760ff60a01b1916600160a01b8915159081029190911790955560048790556005869055604080519485526020850191909152918b16918301919091526060820152608081019190915260a0810183905260c081018290527f032835fbda29b41913aad527df3877678b6b97c78b716bb4074bb16699a76e8d9060e00160405180910390a150505050505050565b60005461010090046001600160a01b031633146109b25760405162461bcd60e51b815260040161057c906118cd565b6001600160a01b03811660009081526002602052604090205460ff16610a085760405162461bcd60e51b815260206004820152600b60248201526a139bdd0819dc985b9d195960aa1b604482015260640161057c565b6001600160a01b038116600081815260026020526040808220805460ff19169055517ff474b72f3e21ebafdad7dadfcb99ae7eabdbf538d52a0e0eecbf8ce0fa7043fe9190a250565b6001546001600160a01b03163314610a9c5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c903732bb9037bbb732b960911b604482015260640161057c565b6000805433610100818102610100600160a81b031984161784556040516001600160a01b03919093041692909183917faac18e3887f7d855b2483e20615f8e3fb6efc18e25502090082b47047fb57c7391a350565b60005461010090046001600160a01b03163314610b205760405162461bcd60e51b815260040161057c906118cd565b6106a96114c6565b60005460ff1615610b6e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161057c565b6004543390600090610b849060ff87169061195c565b905060008560ff16600360020154610b9c919061195c565b9050610ba66106ab565b610bdd5760405162461bcd60e51b81526020600482015260086024820152672737ba1037b832b760c11b604482015260640161057c565b620249f08660ff16600654610bf2919061197b565b1115610c355760405162461bcd60e51b815260206004820152601260248201527145786365656473206d617820737570706c7960701b604482015260640161057c565b60035463ffffffff80821691610c579160ff8a1691600160401b900416611993565b63ffffffff161115610c9c5760405162461bcd60e51b815260206004820152600e60248201526d4578636565647320737570706c7960901b604482015260640161057c565b6003546040516344c4dcc160e01b81526001600160a01b03858116600483015264010000000090920463ffffffff169160ff8916917f0000000000000000000000000000000000000000000000000000000000000000909116906344c4dcc19060240160206040518083038186803b158015610d1757600080fd5b505afa158015610d2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4f91906119bb565b6001600160a01b038616600090815260076020526040902054610d759160ff169061197b565b610d7f919061197b565b1115610dbb5760405162461bcd60e51b815260206004820152600b60248201526a045786365656473206361760ac1b604482015260640161057c565b600354600160a01b900460ff1615610e7c5760008581526008602052604090205460ff1615610e195760405162461bcd60e51b815260206004820152600a602482015269139bdb98d9481d5cd95960b21b604482015260640161057c565b610e24838686611541565b610e625760405162461bcd60e51b815260206004820152600f60248201526e139bdd081dda1a5d195b1a5cdd1959608a1b604482015260640161057c565b6000858152600860205260409020805460ff191660011790555b6006805460ff88169081019091556003805463ffffffff600160401b808304821685019091160263ffffffff60401b199091161790556001600160a01b0384811660008181526007602052604090819020805490940190935591516323b872dd60e01b815260048101929092527f000000000000000000000000000000000000000000000000000000000000000081166024830152604482018490527f000000000000000000000000000000000000000000000000000000000000000016906323b872dd90606401602060405180830381600087803b158015610f5e57600080fd5b505af1158015610f72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9691906119d8565b5060405163ec0d16a160e01b81526001600160a01b03848116600483015260ff881660248301527f0000000000000000000000000000000000000000000000000000000000000000169063ec0d16a190604401600060405180830381600087803b15801561100357600080fd5b505af1158015611017573d6000803e3d6000fd5b50505050600081111561110d576000836001600160a01b03168260405160006040518083038185875af1925050503d8060008114611071576040519150601f19603f3d011682016040523d82523d6000602084013e611076565b606091505b5050905080156110c757604080516001600160a01b0386168152602081018490527f9db06889236e0d3ccbb25b6d3235472c344c7c6344f6a2c4d439baf64558adf7910160405180910390a161110b565b836001600160a01b03167faa7c8b793f177361ae906f241e79303b4257976b38d8139e2f1f4a54704a7a854760405161110291815260200190565b60405180910390a25b505b6040805160ff88168152602081018490526001600160a01b038516917f12cb4648cf3058b17ceeb33e579f8b0bc269fe0843f3900b8e24b6c54871703c910160405180910390a2505050505050565b60005461010090046001600160a01b0316331461118b5760405162461bcd60e51b815260040161057c906118cd565b6001600160a01b0381166111d15760405162461bcd60e51b815260206004820152600d60248201526c4e6f206164647265737328302960981b604482015260640161057c565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fd52a054f85e9a057277cd95bf6d5da45465068f0467ec7991f3fcc017be6b72590600090a250565b60005461010090046001600160a01b0316331461124a5760405162461bcd60e51b815260040161057c906118cd565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168260405160006040518083038185875af1925050503d80600081146112b7576040519150601f19603f3d011682016040523d82523d6000602084013e6112bc565b606091505b50509050806112ff5760405162461bcd60e51b815260206004820152600f60248201526e15da5d1a191c985dc819985a5b1959608a1b604482015260640161057c565b5050565b3360009081526002602052604090205460ff166113505760405162461bcd60e51b815260206004820152600b60248201526a27b7363c9036b4b73a32b960a91b604482015260640161057c565b620249f081600654611362919061197b565b11156113a55760405162461bcd60e51b815260206004820152601260248201527145786365656473206d617820737570706c7960701b604482015260640161057c565b600680548201905560405163ec0d16a160e01b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063ec0d16a190604401600060405180830381600087803b15801561141757600080fd5b505af115801561142b573d6000803e3d6000fd5b505050505050565b60005460ff1661147c5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161057c565b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60005460ff161561150c5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161057c565b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586114a93390565b6040516bffffffffffffffffffffffff19606085901b1660208201526034810183905260009081906054016040516020818303038152906040528051906020012090506000816040516020016115c391907f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810191909152603c0190565b6040516020818303038152906040528051906020012090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031660018286604001602081019061161b91906119f5565b604080516000815260208181018084529490945260ff909216908201528735606082015290870135608082015260a0016020604051602081039080840390855afa15801561166d573d6000803e3d6000fd5b505050602060405103516001600160a01b031614925050509392505050565b80356001600160a01b03811681146116a357600080fd5b919050565b6000602082840312156116ba57600080fd5b6116c38261168c565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156116f257600080fd5b813567ffffffffffffffff8082111561170a57600080fd5b818401915084601f83011261171e57600080fd5b813581811115611730576117306116ca565b604051601f8201601f19908116603f01168101908382118183101715611758576117586116ca565b8160405282815287602084870101111561177157600080fd5b826020860160208301376000928101602001929092525095945050505050565b803563ffffffff811681146116a357600080fd5b80151581146117b357600080fd5b50565b600080600080600080600060e0888a0312156117d157600080fd5b6117da88611791565b96506117e860208901611791565b95506117f660408901611791565b945061180460608901611791565b93506080880135611814816117a5565b9699959850939692959460a0840135945060c09093013592915050565b60ff811681146117b357600080fd5b600080600083850360a081121561185657600080fd5b843561186181611831565b9350602085013592506060603f198201121561187c57600080fd5b506040840190509250925092565b60006020828403121561189c57600080fd5b5035919050565b600080604083850312156118b657600080fd5b6118bf8361168c565b946020939093013593505050565b6020808252600a908201526927b7363c9037bbb732b960b11b604082015260600190565b600060208083528351808285015260005b8181101561191e57858101830151858201604001528201611902565b81811115611930576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561197657611976611946565b500290565b6000821982111561198e5761198e611946565b500190565b600063ffffffff8083168185168083038211156119b2576119b2611946565b01949350505050565b6000602082840312156119cd57600080fd5b81516116c381611831565b6000602082840312156119ea57600080fd5b81516116c3816117a5565b600060208284031215611a0757600080fd5b81356116c38161183156fea26469706673582212206c109e014d835c8d69d0988c382708aa7600cd58c448b9b0e5a1f7f21970d07064736f6c63430008090033",
  "deployedBytecode": "0x60806040526004361061014f5760003560e01c80636cef16e6116100b6578063c06abfc71161006f578063c06abfc71461046e578063d4ee1d90146104a2578063d5abeb01146104c2578063e8a379b2146104d9578063ec0d16a1146104f9578063fbfa77cf1461051957600080fd5b80636cef16e6146103af5780638456cb59146103c45780638da5cb5b146103d957806397efc5a1146103fe578063aa271e1a1461041e578063ac5a7d5c1461044e57600080fd5b80634f02c420116101085780634f02c4201461027757806355f804b31461028d57806358a83fbc146102ad5780635c975abb146102cd57806364df8975146102e557806369e2f0fb1461038f57600080fd5b8063238ac9331461015b5780633dd1eb61146101ac5780633e413bee146101ce5780633f4ba83a1461020257806344c4dcc11461021757806347535d7b1461025257600080fd5b3661015657005b600080fd5b34801561016757600080fd5b5061018f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101b857600080fd5b506101cc6101c73660046116a8565b61054d565b005b3480156101da57600080fd5b5061018f7f000000000000000000000000000000000000000000000000000000000000000081565b34801561020e57600080fd5b506101cc610672565b34801561022357600080fd5b506102446102323660046116a8565b60076020526000908152604090205481565b6040519081526020016101a3565b34801561025e57600080fd5b506102676106ab565b60405190151581526020016101a3565b34801561028357600080fd5b5061024460065481565b34801561029957600080fd5b506101cc6102a83660046116e0565b6106e0565b3480156102b957600080fd5b506101cc6102c83660046117b6565b610790565b3480156102d957600080fd5b5060005460ff16610267565b3480156102f157600080fd5b5060035460045460055461033f9263ffffffff808216936401000000008304821693600160401b8404831693600160601b8104841693600160801b82041692600160a01b90910460ff169188565b6040805163ffffffff998a16815297891660208901529588169587019590955292861660608601529416608084015292151560a083015260c082019290925260e0810191909152610100016101a3565b34801561039b57600080fd5b506101cc6103aa3660046116a8565b610983565b3480156103bb57600080fd5b506101cc610a51565b3480156103d057600080fd5b506101cc610af1565b3480156103e557600080fd5b5060005461018f9061010090046001600160a01b031681565b34801561040a57600080fd5b506101cc610419366004611840565b610b28565b34801561042a57600080fd5b506102676104393660046116a8565b60026020526000908152604090205460ff1681565b34801561045a57600080fd5b506101cc6104693660046116a8565b61115c565b34801561047a57600080fd5b5061018f7f000000000000000000000000000000000000000000000000000000000000000081565b3480156104ae57600080fd5b5060015461018f906001600160a01b031681565b3480156104ce57600080fd5b50610244620249f081565b3480156104e557600080fd5b506101cc6104f436600461188a565b61121b565b34801561050557600080fd5b506101cc6105143660046118a3565b611303565b34801561052557600080fd5b5061018f7f000000000000000000000000000000000000000000000000000000000000000081565b60005461010090046001600160a01b031633146105855760405162461bcd60e51b815260040161057c906118cd565b60405180910390fd5b6001600160a01b0381166105cb5760405162461bcd60e51b815260206004820152600d60248201526c4e6f206164647265737328302960981b604482015260640161057c565b6001600160a01b03811660009081526002602052604090205460ff16156106265760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4819dc985b9d1959608a1b604482015260640161057c565b6001600160a01b038116600081815260026020526040808220805460ff19166001179055517fbd42b6cd963a984d8cbff85acad4dd2c87a6d85ac756d16e6d2ec5ce6c8f07309190a250565b60005461010090046001600160a01b031633146106a15760405162461bcd60e51b815260040161057c906118cd565b6106a9611433565b565b600354600090600160601b900463ffffffff1642108015906106db5750600354600160801b900463ffffffff1642105b905090565b60005461010090046001600160a01b0316331461070f5760405162461bcd60e51b815260040161057c906118cd565b6040516355f804b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906355f804b39061075b9084906004016118f1565b600060405180830381600087803b15801561077557600080fd5b505af1158015610789573d6000803e3d6000fd5b5050505050565b60005461010090046001600160a01b031633146107bf5760405162461bcd60e51b815260040161057c906118cd565b8663ffffffff168663ffffffff16101561081b5760405162461bcd60e51b815260206004820152601b60248201527f436c6f73696e672074696d65203c204f70656e696e672074696d650000000000604482015260640161057c565b6108236106ab565b6108a557428763ffffffff16116108735760405162461bcd60e51b8152602060048201526014602482015273496e76616c6964206f70656e696e672074696d6560601b604482015260640161057c565b600380546fffffffffffffffff00000000000000001916600160601b63ffffffff8a160263ffffffff60401b19161790555b6003805463ffffffff87811673ffffffff0000000000000000ffffffffffffffff19909216600160801b8a831690810267ffffffffffffffff19169190911783176401000000008984169081029190911760ff60a01b1916600160a01b8915159081029190911790955560048790556005869055604080519485526020850191909152918b16918301919091526060820152608081019190915260a0810183905260c081018290527f032835fbda29b41913aad527df3877678b6b97c78b716bb4074bb16699a76e8d9060e00160405180910390a150505050505050565b60005461010090046001600160a01b031633146109b25760405162461bcd60e51b815260040161057c906118cd565b6001600160a01b03811660009081526002602052604090205460ff16610a085760405162461bcd60e51b815260206004820152600b60248201526a139bdd0819dc985b9d195960aa1b604482015260640161057c565b6001600160a01b038116600081815260026020526040808220805460ff19169055517ff474b72f3e21ebafdad7dadfcb99ae7eabdbf538d52a0e0eecbf8ce0fa7043fe9190a250565b6001546001600160a01b03163314610a9c5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c903732bb9037bbb732b960911b604482015260640161057c565b6000805433610100818102610100600160a81b031984161784556040516001600160a01b03919093041692909183917faac18e3887f7d855b2483e20615f8e3fb6efc18e25502090082b47047fb57c7391a350565b60005461010090046001600160a01b03163314610b205760405162461bcd60e51b815260040161057c906118cd565b6106a96114c6565b60005460ff1615610b6e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161057c565b6004543390600090610b849060ff87169061195c565b905060008560ff16600360020154610b9c919061195c565b9050610ba66106ab565b610bdd5760405162461bcd60e51b81526020600482015260086024820152672737ba1037b832b760c11b604482015260640161057c565b620249f08660ff16600654610bf2919061197b565b1115610c355760405162461bcd60e51b815260206004820152601260248201527145786365656473206d617820737570706c7960701b604482015260640161057c565b60035463ffffffff80821691610c579160ff8a1691600160401b900416611993565b63ffffffff161115610c9c5760405162461bcd60e51b815260206004820152600e60248201526d4578636565647320737570706c7960901b604482015260640161057c565b6003546040516344c4dcc160e01b81526001600160a01b03858116600483015264010000000090920463ffffffff169160ff8916917f0000000000000000000000000000000000000000000000000000000000000000909116906344c4dcc19060240160206040518083038186803b158015610d1757600080fd5b505afa158015610d2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4f91906119bb565b6001600160a01b038616600090815260076020526040902054610d759160ff169061197b565b610d7f919061197b565b1115610dbb5760405162461bcd60e51b815260206004820152600b60248201526a045786365656473206361760ac1b604482015260640161057c565b600354600160a01b900460ff1615610e7c5760008581526008602052604090205460ff1615610e195760405162461bcd60e51b815260206004820152600a602482015269139bdb98d9481d5cd95960b21b604482015260640161057c565b610e24838686611541565b610e625760405162461bcd60e51b815260206004820152600f60248201526e139bdd081dda1a5d195b1a5cdd1959608a1b604482015260640161057c565b6000858152600860205260409020805460ff191660011790555b6006805460ff88169081019091556003805463ffffffff600160401b808304821685019091160263ffffffff60401b199091161790556001600160a01b0384811660008181526007602052604090819020805490940190935591516323b872dd60e01b815260048101929092527f000000000000000000000000000000000000000000000000000000000000000081166024830152604482018490527f000000000000000000000000000000000000000000000000000000000000000016906323b872dd90606401602060405180830381600087803b158015610f5e57600080fd5b505af1158015610f72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9691906119d8565b5060405163ec0d16a160e01b81526001600160a01b03848116600483015260ff881660248301527f0000000000000000000000000000000000000000000000000000000000000000169063ec0d16a190604401600060405180830381600087803b15801561100357600080fd5b505af1158015611017573d6000803e3d6000fd5b50505050600081111561110d576000836001600160a01b03168260405160006040518083038185875af1925050503d8060008114611071576040519150601f19603f3d011682016040523d82523d6000602084013e611076565b606091505b5050905080156110c757604080516001600160a01b0386168152602081018490527f9db06889236e0d3ccbb25b6d3235472c344c7c6344f6a2c4d439baf64558adf7910160405180910390a161110b565b836001600160a01b03167faa7c8b793f177361ae906f241e79303b4257976b38d8139e2f1f4a54704a7a854760405161110291815260200190565b60405180910390a25b505b6040805160ff88168152602081018490526001600160a01b038516917f12cb4648cf3058b17ceeb33e579f8b0bc269fe0843f3900b8e24b6c54871703c910160405180910390a2505050505050565b60005461010090046001600160a01b0316331461118b5760405162461bcd60e51b815260040161057c906118cd565b6001600160a01b0381166111d15760405162461bcd60e51b815260206004820152600d60248201526c4e6f206164647265737328302960981b604482015260640161057c565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fd52a054f85e9a057277cd95bf6d5da45465068f0467ec7991f3fcc017be6b72590600090a250565b60005461010090046001600160a01b0316331461124a5760405162461bcd60e51b815260040161057c906118cd565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168260405160006040518083038185875af1925050503d80600081146112b7576040519150601f19603f3d011682016040523d82523d6000602084013e6112bc565b606091505b50509050806112ff5760405162461bcd60e51b815260206004820152600f60248201526e15da5d1a191c985dc819985a5b1959608a1b604482015260640161057c565b5050565b3360009081526002602052604090205460ff166113505760405162461bcd60e51b815260206004820152600b60248201526a27b7363c9036b4b73a32b960a91b604482015260640161057c565b620249f081600654611362919061197b565b11156113a55760405162461bcd60e51b815260206004820152601260248201527145786365656473206d617820737570706c7960701b604482015260640161057c565b600680548201905560405163ec0d16a160e01b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063ec0d16a190604401600060405180830381600087803b15801561141757600080fd5b505af115801561142b573d6000803e3d6000fd5b505050505050565b60005460ff1661147c5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161057c565b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60005460ff161561150c5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161057c565b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586114a93390565b6040516bffffffffffffffffffffffff19606085901b1660208201526034810183905260009081906054016040516020818303038152906040528051906020012090506000816040516020016115c391907f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810191909152603c0190565b6040516020818303038152906040528051906020012090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031660018286604001602081019061161b91906119f5565b604080516000815260208181018084529490945260ff909216908201528735606082015290870135608082015260a0016020604051602081039080840390855afa15801561166d573d6000803e3d6000fd5b505050602060405103516001600160a01b031614925050509392505050565b80356001600160a01b03811681146116a357600080fd5b919050565b6000602082840312156116ba57600080fd5b6116c38261168c565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156116f257600080fd5b813567ffffffffffffffff8082111561170a57600080fd5b818401915084601f83011261171e57600080fd5b813581811115611730576117306116ca565b604051601f8201601f19908116603f01168101908382118183101715611758576117586116ca565b8160405282815287602084870101111561177157600080fd5b826020860160208301376000928101602001929092525095945050505050565b803563ffffffff811681146116a357600080fd5b80151581146117b357600080fd5b50565b600080600080600080600060e0888a0312156117d157600080fd5b6117da88611791565b96506117e860208901611791565b95506117f660408901611791565b945061180460608901611791565b93506080880135611814816117a5565b9699959850939692959460a0840135945060c09093013592915050565b60ff811681146117b357600080fd5b600080600083850360a081121561185657600080fd5b843561186181611831565b9350602085013592506060603f198201121561187c57600080fd5b506040840190509250925092565b60006020828403121561189c57600080fd5b5035919050565b600080604083850312156118b657600080fd5b6118bf8361168c565b946020939093013593505050565b6020808252600a908201526927b7363c9037bbb732b960b11b604082015260600190565b600060208083528351808285015260005b8181101561191e57858101830151858201604001528201611902565b81811115611930576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561197657611976611946565b500290565b6000821982111561198e5761198e611946565b500190565b600063ffffffff8083168185168083038211156119b2576119b2611946565b01949350505050565b6000602082840312156119cd57600080fd5b81516116c381611831565b6000602082840312156119ea57600080fd5b81516116c3816117a5565b600060208284031215611a0757600080fd5b81356116c38161183156fea26469706673582212206c109e014d835c8d69d0988c382708aa7600cd58c448b9b0e5a1f7f21970d07064736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 122,
        "contract": "contracts/EggSale.sol:RoosterEggSale",
        "label": "_paused",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 5036,
        "contract": "contracts/EggSale.sol:RoosterEggSale",
        "label": "owner",
        "offset": 1,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 5038,
        "contract": "contracts/EggSale.sol:RoosterEggSale",
        "label": "newOwner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 5042,
        "contract": "contracts/EggSale.sol:RoosterEggSale",
        "label": "isMinter",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 6142,
        "contract": "contracts/EggSale.sol:RoosterEggSale",
        "label": "eggsale",
        "offset": 0,
        "slot": "3",
        "type": "t_struct(EggSale)6218_storage"
      },
      {
        "astId": 6154,
        "contract": "contracts/EggSale.sol:RoosterEggSale",
        "label": "minted",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 6161,
        "contract": "contracts/EggSale.sol:RoosterEggSale",
        "label": "purchasedAmount",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 6165,
        "contract": "contracts/EggSale.sol:RoosterEggSale",
        "label": "_nonceUsed",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_bytes32,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_struct(EggSale)6218_storage": {
        "encoding": "inplace",
        "label": "struct RoosterEggSale.EggSale",
        "members": [
          {
            "astId": 6203,
            "contract": "contracts/EggSale.sol:RoosterEggSale",
            "label": "supply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 6205,
            "contract": "contracts/EggSale.sol:RoosterEggSale",
            "label": "cap",
            "offset": 4,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 6207,
            "contract": "contracts/EggSale.sol:RoosterEggSale",
            "label": "sold",
            "offset": 8,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 6209,
            "contract": "contracts/EggSale.sol:RoosterEggSale",
            "label": "openingTime",
            "offset": 12,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 6211,
            "contract": "contracts/EggSale.sol:RoosterEggSale",
            "label": "closingTime",
            "offset": 16,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 6213,
            "contract": "contracts/EggSale.sol:RoosterEggSale",
            "label": "whitelist",
            "offset": 20,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 6215,
            "contract": "contracts/EggSale.sol:RoosterEggSale",
            "label": "price",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 6217,
            "contract": "contracts/EggSale.sol:RoosterEggSale",
            "label": "cashback",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}