{
  "address": "0x796423297b84be912ffe9233e59d8b5b37c82b7e",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "baseUri_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roosterId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "breed",
          "type": "uint256"
        }
      ],
      "name": "BreedSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerPulled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "pushedOwner",
          "type": "address"
        }
      ],
      "name": "OwnerPushed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseUri",
          "type": "string"
        }
      ],
      "name": "UpdateBaseUri",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "breeds",
          "type": "uint256[]"
        }
      ],
      "name": "batchMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roosterId",
          "type": "uint256"
        }
      ],
      "name": "breeds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantMinterRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "breed",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "newOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pullOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "pushOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeMinterRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "roosterIds",
          "type": "uint256[]"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newUri",
          "type": "string"
        }
      ],
      "name": "setBaseUri",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roosterId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x989e45fd82f7955ced3ad2c0156714f5a55517657ac6433326bb36214ad97714",
  "receipt": {
    "to": null,
    "from": "0x374180e6e1b14454c18e44b635a95e7d37160570",
    "contractAddress": "0x796423297b84be912ffe9233e59d8b5b37c82b7e",
    "transactionIndex": "0x1a",
    "gasUsed": "0x1a39eb",
    "logsBloom": "0x00000000820000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000020000000000000000000000000020010000000000000000800000000000000000000000000000200000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000010000000000000000012000000000000000000000000000000000000000000000000000000000020020000000000000000000000000000000000000000000000000000000000040000000",
    "blockHash": "0xbcb7be059a917fb48361f8c8c7a296ce64ee8bd164dbceb3fe712537098e8698",
    "transactionHash": "0x989e45fd82f7955ced3ad2c0156714f5a55517657ac6433326bb36214ad97714",
    "logs": [
      {
        "blockHash": "0xbcb7be059a917fb48361f8c8c7a296ce64ee8bd164dbceb3fe712537098e8698",
        "address": "0x796423297b84be912ffe9233e59d8b5b37c82b7e",
        "logIndex": "0xa",
        "data": "0x",
        "removed": false,
        "topics": [
          "0xaac18e3887f7d855b2483e20615f8e3fb6efc18e25502090082b47047fb57c73",
          "0x000000000000000000000000374180e6e1b14454c18e44b635a95e7d37160570",
          "0x0000000000000000000000000000000000000000000000000000000000000000"
        ],
        "blockNumber": "0x9e80e8",
        "transactionIndex": "0x1a",
        "transactionHash": "0x989e45fd82f7955ced3ad2c0156714f5a55517657ac6433326bb36214ad97714"
      },
      {
        "blockHash": "0xbcb7be059a917fb48361f8c8c7a296ce64ee8bd164dbceb3fe712537098e8698",
        "address": "0x796423297b84be912ffe9233e59d8b5b37c82b7e",
        "logIndex": "0xb",
        "data": "0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000",
        "removed": false,
        "topics": [
          "0x157eb1fffc1000c7f0ee8cb1f87be2620ec910b8be9e3af7db8c97328e2757cf"
        ],
        "blockNumber": "0x9e80e8",
        "transactionIndex": "0x1a",
        "transactionHash": "0x989e45fd82f7955ced3ad2c0156714f5a55517657ac6433326bb36214ad97714"
      }
    ],
    "blockNumber": "0x9e80e8",
    "cumulativeGasUsed": "0x6ecc5b",
    "status": "0x1"
  },
  "args": [
    ""
  ],
  "numDeployments": 3,
  "solcInputHash": "098ca35b27a7f562232c87be6222f611",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseUri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roosterId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"breed\",\"type\":\"uint256\"}],\"name\":\"BreedSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pushedOwner\",\"type\":\"address\"}],\"name\":\"OwnerPushed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseUri\",\"type\":\"string\"}],\"name\":\"UpdateBaseUri\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"breeds\",\"type\":\"uint256[]\"}],\"name\":\"batchMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roosterId\",\"type\":\"uint256\"}],\"name\":\"breeds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantMinterRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"breed\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"pushOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeMinterRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"roosterIds\",\"type\":\"uint256[]\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newUri\",\"type\":\"string\"}],\"name\":\"setBaseUri\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roosterId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Rooster.sol\":\"Rooster\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\"},\"@rari-capital/solmate/src/tokens/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern, minimalist, and gas efficient ERC-721 implementation.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC721.sol)\\n/// @dev Note that balanceOf does not revert if passed the zero address, in defiance of the ERC.\\nabstract contract ERC721 {\\n    /*///////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 indexed id);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 indexed id);\\n\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /*///////////////////////////////////////////////////////////////\\n                          METADATA STORAGE/LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    function tokenURI(uint256 id) public view virtual returns (string memory);\\n\\n    /*///////////////////////////////////////////////////////////////\\n                            ERC721 STORAGE                        \\n    //////////////////////////////////////////////////////////////*/\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(uint256 => address) public ownerOf;\\n\\n    mapping(uint256 => address) public getApproved;\\n\\n    mapping(address => mapping(address => bool)) public isApprovedForAll;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(string memory _name, string memory _symbol) {\\n        name = _name;\\n        symbol = _symbol;\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC721 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 id) public virtual {\\n        address owner = ownerOf[id];\\n\\n        require(msg.sender == owner || isApprovedForAll[owner][msg.sender], \\\"NOT_AUTHORIZED\\\");\\n\\n        getApproved[id] = spender;\\n\\n        emit Approval(owner, spender, id);\\n    }\\n\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        isApprovedForAll[msg.sender][operator] = approved;\\n\\n        emit ApprovalForAll(msg.sender, operator, approved);\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 id\\n    ) public virtual {\\n        require(from == ownerOf[id], \\\"WRONG_FROM\\\");\\n\\n        require(to != address(0), \\\"INVALID_RECIPIENT\\\");\\n\\n        require(\\n            msg.sender == from || msg.sender == getApproved[id] || isApprovedForAll[from][msg.sender],\\n            \\\"NOT_AUTHORIZED\\\"\\n        );\\n\\n        // Underflow of the sender's balance is impossible because we check for\\n        // ownership above and the recipient's balance can't realistically overflow.\\n        unchecked {\\n            balanceOf[from]--;\\n\\n            balanceOf[to]++;\\n        }\\n\\n        ownerOf[id] = to;\\n\\n        delete getApproved[id];\\n\\n        emit Transfer(from, to, id);\\n    }\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id\\n    ) public virtual {\\n        transferFrom(from, to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\") ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        bytes memory data\\n    ) public virtual {\\n        transferFrom(from, to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data) ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC165 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function supportsInterface(bytes4 interfaceId) public pure virtual returns (bool) {\\n        return\\n            interfaceId == 0x01ffc9a7 || // ERC165 Interface ID for ERC165\\n            interfaceId == 0x80ac58cd || // ERC165 Interface ID for ERC721\\n            interfaceId == 0x5b5e139f; // ERC165 Interface ID for ERC721Metadata\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                       INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 id) internal virtual {\\n        require(to != address(0), \\\"INVALID_RECIPIENT\\\");\\n\\n        require(ownerOf[id] == address(0), \\\"ALREADY_MINTED\\\");\\n\\n        // Counter overflow is incredibly unrealistic.\\n        unchecked {\\n            balanceOf[to]++;\\n        }\\n\\n        ownerOf[id] = to;\\n\\n        emit Transfer(address(0), to, id);\\n    }\\n\\n    function _burn(uint256 id) internal virtual {\\n        address owner = ownerOf[id];\\n\\n        require(ownerOf[id] != address(0), \\\"NOT_MINTED\\\");\\n\\n        // Ownership check above ensures no underflow.\\n        unchecked {\\n            balanceOf[owner]--;\\n        }\\n\\n        delete ownerOf[id];\\n\\n        delete getApproved[id];\\n\\n        emit Transfer(owner, address(0), id);\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                       INTERNAL SAFE MINT LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _safeMint(address to, uint256 id) internal virtual {\\n        _mint(to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, address(0), id, \\\"\\\") ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n\\n    function _safeMint(\\n        address to,\\n        uint256 id,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, address(0), id, data) ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n}\\n\\n/// @notice A generic interface for a contract which properly accepts ERC721 tokens.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC721.sol)\\ninterface ERC721TokenReceiver {\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xf97378ab999188b3d5d97037fabbecbc726892c74cba6536899b852eb4756d6a\",\"license\":\"AGPL-3.0-only\"},\"contracts/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {Pausable} from \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\n\\ncontract AccessControl is Pausable {\\n  //Address of current owner\\n  address public owner;\\n  //Address of new owner (Note: new owner must pull to be an owner)\\n  address public newOwner;\\n  //Maps if user has minter role\\n  mapping(address => bool) public isMinter;\\n\\n  //Fires when new owner is pushed\\n  event OwnerPushed(address indexed pushedOwner);\\n  //Fires when new owner pulled\\n  event OwnerPulled(address indexed previousOwner, address indexed newOwner);\\n  //Fires when minter role is granted\\n  event MinterRoleGranted(address indexed account);\\n  //Fires when minter role is revoked\\n  event MinterRoleRevoked(address indexed account);\\n\\n  constructor() {\\n    owner = msg.sender;\\n    emit OwnerPulled(msg.sender, address(0));\\n  }\\n\\n  modifier onlyOwner() {\\n    require(msg.sender == owner, \\\"Only owner\\\");\\n    _;\\n  }\\n\\n  modifier onlyMinter() {\\n    require(isMinter[msg.sender], \\\"Only minter\\\");\\n    _;\\n  }\\n\\n  function pushOwner(address account) public onlyOwner {\\n    require(account != address(0), \\\"No address(0)\\\");\\n    newOwner = account;\\n    emit OwnerPushed(account);\\n  }\\n\\n  function pullOwner() external {\\n    require(msg.sender == newOwner, \\\"Only new owner\\\");\\n    address oldOwner = owner;\\n    owner = msg.sender;\\n    emit OwnerPulled(oldOwner, msg.sender);\\n  }\\n\\n  function grantMinterRole(address account) external onlyOwner {\\n    require(account != address(0), \\\"No address(0)\\\");\\n    require(!isMinter[account], \\\"Already granted\\\");\\n    isMinter[account] = true;\\n    emit MinterRoleGranted(account);\\n  }\\n\\n  function revokeMinterRole(address account) external onlyOwner {\\n    require(isMinter[account], \\\"Not granted\\\");\\n    isMinter[account] = false;\\n    emit MinterRoleRevoked(account);\\n  }\\n\\n  function pause() external onlyOwner {\\n    _pause();\\n  }\\n\\n  function unpause() external onlyOwner {\\n    _unpause();\\n  }\\n}\\n\",\"keccak256\":\"0x950a25e8ab43339c7f5e8fc55d80466264b2698d084c56c877868977440bf9d6\",\"license\":\"MIT\"},\"contracts/Rooster.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {ERC721} from \\\"@rari-capital/solmate/src/tokens/ERC721.sol\\\";\\nimport \\\"./RoosterMetadata.sol\\\";\\nimport \\\"./AccessControl.sol\\\";\\n\\ncontract Rooster is ERC721, AccessControl, RoosterMetadata {\\n  //Current roosterId count\\n  uint256 private _roosterIdCounter = 0;\\n\\n  constructor(string memory baseUri_) ERC721(\\\"Rooster\\\", \\\"ROOSTER\\\") {\\n    setBaseUri(baseUri_);\\n  }\\n\\n  function totalSupply() public view returns (uint256) {\\n    return _roosterIdCounter;\\n  }\\n\\n  function safeBatchTransferFrom(\\n    address from,\\n    address to,\\n    uint256[] memory roosterIds\\n  ) external {\\n    for (uint256 i = 0; i < roosterIds.length; ) {\\n      safeTransferFrom(from, to, roosterIds[i]);\\n      unchecked {\\n        i++;\\n      }\\n    }\\n  }\\n\\n  function mint(address to, uint256 breed) external onlyMinter {\\n    uint256 roosterId = _roosterIdCounter;\\n\\n    unchecked {\\n      _roosterIdCounter++;\\n    }\\n\\n    _mint(to, roosterId, breed);\\n  }\\n\\n  function batchMint(address to, uint256[] memory breeds) external onlyMinter {\\n    uint256 roosterId = _roosterIdCounter;\\n\\n    for (uint256 i = 0; i < breeds.length; ) {\\n      _mint(to, roosterId, breeds[i]);\\n\\n      unchecked {\\n        roosterId++;\\n        i++;\\n      }\\n    }\\n\\n    _roosterIdCounter = roosterId;\\n  }\\n\\n  function _mint(\\n    address to,\\n    uint256 roosterId,\\n    uint256 breed\\n  ) private {\\n    _safeMint(to, roosterId);\\n    _setBreed(roosterId, breed);\\n  }\\n}\\n\",\"keccak256\":\"0x700199574394d1f53ad0e4fffe8f0c1cbf08cbaa9abb53f60e98a89a44c29da3\",\"license\":\"MIT\"},\"contracts/RoosterMetadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {ERC721} from \\\"@rari-capital/solmate/src/tokens/ERC721.sol\\\";\\nimport {Strings} from \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\nimport \\\"./AccessControl.sol\\\";\\n\\nabstract contract RoosterMetadata is ERC721, AccessControl {\\n  using Strings for uint256;\\n\\n  //Rooster metadata base uri\\n  string private _baseUri;\\n  //Maps rooster id to breed\\n  mapping(uint256 => uint256) private _breeds;\\n\\n  //Fires when base uri is updated\\n  event UpdateBaseUri(string baseUri);\\n  //Fires when breed is set\\n  event BreedSet(uint256 indexed roosterId, uint256 breed);\\n\\n  function breeds(uint256 roosterId) public view returns (uint256) {\\n    require(_exists(roosterId), \\\"Query for nonexistent rooster\\\");\\n    return _breeds[roosterId];\\n  }\\n\\n  function tokenURI(uint256 roosterId) public view override returns (string memory) {\\n    require(_exists(roosterId), \\\"Query for nonexistent rooster\\\");\\n    return string(abi.encodePacked(_baseUri, roosterId.toString()));\\n  }\\n\\n  function setBaseUri(string memory newUri) public onlyOwner {\\n    _baseUri = newUri;\\n    emit UpdateBaseUri(newUri);\\n  }\\n\\n  function _setBreed(uint256 roosterId, uint256 breed) internal {\\n    _breeds[roosterId] = breed;\\n    emit BreedSet(roosterId, breed);\\n  }\\n\\n  function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n    return ownerOf[tokenId] != address(0);\\n  }\\n}\\n\",\"keccak256\":\"0xb6437089fcfa0ab98eae8627758a25efb4f9b6ea7cdc7103d6de4bedaeb340f0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526000600b553480156200001657600080fd5b506040516200204e3803806200204e833981016040819052620000399162000295565b604051806040016040528060078152602001662937b7b9ba32b960c91b815250604051806040016040528060078152602001662927a7a9aa22a960c91b815250816000908051906020019062000091929190620001a6565b508051620000a7906001906020840190620001a6565b5050600680546001600160a81b0319166101003390810291909117909155604051600092507faac18e3887f7d855b2483e20615f8e3fb6efc18e25502090082b47047fb57c73908390a3620000fc8162000103565b50620003bf565b60065461010090046001600160a01b03163314620001545760405162461bcd60e51b815260206004820152600a60248201526927b7363c9037bbb732b960b11b604482015260640160405180910390fd5b805162000169906009906020840190620001a6565b507f157eb1fffc1000c7f0ee8cb1f87be2620ec910b8be9e3af7db8c97328e2757cf816040516200019b91906200034d565b60405180910390a150565b828054620001b49062000382565b90600052602060002090601f016020900481019282620001d8576000855562000223565b82601f10620001f357805160ff191683800117855562000223565b8280016001018555821562000223579182015b828111156200022357825182559160200191906001019062000206565b506200023192915062000235565b5090565b5b8082111562000231576000815560010162000236565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200027f57818101518382015260200162000265565b838111156200028f576000848401525b50505050565b600060208284031215620002a857600080fd5b81516001600160401b0380821115620002c057600080fd5b818401915084601f830112620002d557600080fd5b815181811115620002ea57620002ea6200024c565b604051601f8201601f19908116603f011681019083821181831017156200031557620003156200024c565b816040528281528760208487010111156200032f57600080fd5b6200034283602083016020880162000262565b979650505050505050565b60208152600082518060208401526200036e81604085016020870162000262565b601f01601f19169190910160400192915050565b600181811c908216806200039757607f821691505b60208210811415620003b957634e487b7160e01b600052602260045260246000fd5b50919050565b611c7f80620003cf6000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80636352211e11610104578063a0bcfc7f116100a2578063b88d4fde11610071578063b88d4fde146103f9578063c87b56dd1461040c578063d4ee1d901461041f578063e985e9c51461043257600080fd5b8063a0bcfc7f1461039d578063a22cb465146103b0578063aa271e1a146103c3578063ac5a7d5c146103e657600080fd5b806370a08231116100de57806370a08231146103555780638456cb59146103755780638da5cb5b1461037d57806395d89b411461039557600080fd5b80636352211e1461031157806369e2f0fb1461033a5780636cef16e61461034d57600080fd5b80632c0209f51161017157806340c10f191161014b57806340c10f19146102cd57806342842e0e146102e05780634684d7e9146102f35780635c975abb1461030657600080fd5b80632c0209f51461029f5780633dd1eb61146102b25780633f4ba83a146102c557600080fd5b8063081812fc116101ad578063081812fc14610226578063095ea7b31461026757806318160ddd1461027a57806323b872dd1461028c57600080fd5b806301ffc9a7146101d4578063034601ec146101fc57806306fdde0314610211575b600080fd5b6101e76101e23660046115ab565b610460565b60405190151581526020015b60405180910390f35b61020f61020a3660046116b2565b6104b2565b005b6102196104f0565b6040516101f39190611768565b61024f61023436600461177b565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101f3565b61020f610275366004611794565b61057e565b600b545b6040519081526020016101f3565b61020f61029a3660046117be565b610665565b61027e6102ad36600461177b565b61082c565b61020f6102c03660046117fa565b6108a3565b61020f6109bf565b61020f6102db366004611794565b6109f8565b61020f6102ee3660046117be565b610a60565b61020f610301366004611815565b610b3f565b60065460ff166101e7565b61024f61031f36600461177b565b6003602052600090815260409020546001600160a01b031681565b61020f6103483660046117fa565b610bd3565b61020f610ca1565b61027e6103633660046117fa565b60026020526000908152604090205481565b61020f610d46565b60065461024f9061010090046001600160a01b031681565b610219610d7d565b61020f6103ab3660046118bb565b610d8a565b61020f6103be366004611904565b610e07565b6101e76103d13660046117fa565b60086020526000908152604090205460ff1681565b61020f6103f43660046117fa565b610e73565b61020f610407366004611940565b610f32565b61021961041a36600461177b565b610ffd565b60075461024f906001600160a01b031681565b6101e76104403660046119bc565b600560209081526000928352604080842090915290825290205460ff1681565b60006301ffc9a760e01b6001600160e01b03198316148061049157506380ac58cd60e01b6001600160e01b03198316145b806104ac5750635b5e139f60e01b6001600160e01b03198316145b92915050565b60005b81518110156104ea576104e284848484815181106104d5576104d56119ef565b6020026020010151610a60565b6001016104b5565b50505050565b600080546104fd90611a05565b80601f016020809104026020016040519081016040528092919081815260200182805461052990611a05565b80156105765780601f1061054b57610100808354040283529160200191610576565b820191906000526020600020905b81548152906001019060200180831161055957829003601f168201915b505050505081565b6000818152600360205260409020546001600160a01b0316338114806105c757506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6106095760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000818152600360205260409020546001600160a01b038481169116146106bb5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610600565b6001600160a01b0382166107055760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610600565b336001600160a01b038416148061073257506000818152600460205260409020546001600160a01b031633145b8061076057506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b61079d5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610600565b6001600160a01b0380841660008181526002602090815260408083208054600019019055938616808352848320805460010190558583526003825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000818152600360205260408120546001600160a01b03166108905760405162461bcd60e51b815260206004820152601d60248201527f517565727920666f72206e6f6e6578697374656e7420726f6f737465720000006044820152606401610600565b506000908152600a602052604090205490565b60065461010090046001600160a01b031633146108d25760405162461bcd60e51b815260040161060090611a40565b6001600160a01b0381166109185760405162461bcd60e51b815260206004820152600d60248201526c4e6f206164647265737328302960981b6044820152606401610600565b6001600160a01b03811660009081526008602052604090205460ff16156109735760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4819dc985b9d1959608a1b6044820152606401610600565b6001600160a01b038116600081815260086020526040808220805460ff19166001179055517fbd42b6cd963a984d8cbff85acad4dd2c87a6d85ac756d16e6d2ec5ce6c8f07309190a250565b60065461010090046001600160a01b031633146109ee5760405162461bcd60e51b815260040161060090611a40565b6109f6611096565b565b3360009081526008602052604090205460ff16610a455760405162461bcd60e51b815260206004820152600b60248201526a27b7363c9036b4b73a32b960a91b6044820152606401610600565b600b805460018101909155610a5b838284611129565b505050565b610a6b838383610665565b6001600160a01b0382163b1580610b235750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a401602060405180830381600087803b158015610adf57600080fd5b505af1158015610af3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b179190611a64565b6001600160e01b031916145b610a5b5760405162461bcd60e51b815260040161060090611a81565b3360009081526008602052604090205460ff16610b8c5760405162461bcd60e51b815260206004820152600b60248201526a27b7363c9036b4b73a32b960a91b6044820152606401610600565b600b5460005b8251811015610bcb57610bbf8483858481518110610bb257610bb26119ef565b6020026020010151611129565b60019182019101610b92565b50600b555050565b60065461010090046001600160a01b03163314610c025760405162461bcd60e51b815260040161060090611a40565b6001600160a01b03811660009081526008602052604090205460ff16610c585760405162461bcd60e51b815260206004820152600b60248201526a139bdd0819dc985b9d195960aa1b6044820152606401610600565b6001600160a01b038116600081815260086020526040808220805460ff19169055517ff474b72f3e21ebafdad7dadfcb99ae7eabdbf538d52a0e0eecbf8ce0fa7043fe9190a250565b6007546001600160a01b03163314610cec5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c903732bb9037bbb732b960911b6044820152606401610600565b60068054610100600160a81b031981166101003381810292909217909355604051929091046001600160a01b03169182907faac18e3887f7d855b2483e20615f8e3fb6efc18e25502090082b47047fb57c7390600090a350565b60065461010090046001600160a01b03163314610d755760405162461bcd60e51b815260040161060090611a40565b6109f661113d565b600180546104fd90611a05565b60065461010090046001600160a01b03163314610db95760405162461bcd60e51b815260040161060090611a40565b8051610dcc9060099060208401906114f9565b507f157eb1fffc1000c7f0ee8cb1f87be2620ec910b8be9e3af7db8c97328e2757cf81604051610dfc9190611768565b60405180910390a150565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b60065461010090046001600160a01b03163314610ea25760405162461bcd60e51b815260040161060090611a40565b6001600160a01b038116610ee85760405162461bcd60e51b815260206004820152600d60248201526c4e6f206164647265737328302960981b6044820152606401610600565b600780546001600160a01b0319166001600160a01b0383169081179091556040517fd52a054f85e9a057277cd95bf6d5da45465068f0467ec7991f3fcc017be6b72590600090a250565b610f3d848484610665565b6001600160a01b0383163b1580610fe15750604051630a85bd0160e11b808252906001600160a01b0385169063150b7a0290610f83903390899088908890600401611aab565b602060405180830381600087803b158015610f9d57600080fd5b505af1158015610fb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd59190611a64565b6001600160e01b031916145b6104ea5760405162461bcd60e51b815260040161060090611a81565b6000818152600360205260409020546060906001600160a01b03166110645760405162461bcd60e51b815260206004820152601d60248201527f517565727920666f72206e6f6e6578697374656e7420726f6f737465720000006044820152606401610600565b600961106f836111b8565b604051602001611080929190611b04565b6040516020818303038152906040529050919050565b60065460ff166110df5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610600565b6006805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b61113383836112be565b610a5b828261139d565b60065460ff16156111835760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610600565b6006805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861110c3390565b6060816111dc5750506040805180820190915260018152600360fc1b602082015290565b8160005b811561120657806111f081611bc1565b91506111ff9050600a83611bf2565b91506111e0565b60008167ffffffffffffffff811115611221576112216115eb565b6040519080825280601f01601f19166020018201604052801561124b576020820181803683370190505b5090505b84156112b657611260600183611c06565b915061126d600a86611c1d565b611278906030611c31565b60f81b81838151811061128d5761128d6119ef565b60200101906001600160f81b031916908160001a9053506112af600a86611bf2565b945061124f565b949350505050565b6112c882826113ee565b6001600160a01b0382163b158061137d5750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a401602060405180830381600087803b15801561133957600080fd5b505af115801561134d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113719190611a64565b6001600160e01b031916145b6113995760405162461bcd60e51b815260040161060090611a81565b5050565b6000828152600a6020526040908190208290555182907fe46d199dd459049fd4c9c752a8b7559ad5dbc0ddb9b399cd9db4636fd5aa8a83906113e29084815260200190565b60405180910390a25050565b6001600160a01b0382166114385760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610600565b6000818152600360205260409020546001600160a01b03161561148e5760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b6044820152606401610600565b6001600160a01b038216600081815260026020908152604080832080546001019055848352600390915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b82805461150590611a05565b90600052602060002090601f016020900481019282611527576000855561156d565b82601f1061154057805160ff191683800117855561156d565b8280016001018555821561156d579182015b8281111561156d578251825591602001919060010190611552565b5061157992915061157d565b5090565b5b80821115611579576000815560010161157e565b6001600160e01b0319811681146115a857600080fd5b50565b6000602082840312156115bd57600080fd5b81356115c881611592565b9392505050565b80356001600160a01b03811681146115e657600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561162a5761162a6115eb565b604052919050565b600082601f83011261164357600080fd5b8135602067ffffffffffffffff82111561165f5761165f6115eb565b8160051b61166e828201611601565b928352848101820192828101908785111561168857600080fd5b83870192505b848310156116a75782358252918301919083019061168e565b979650505050505050565b6000806000606084860312156116c757600080fd5b6116d0846115cf565b92506116de602085016115cf565b9150604084013567ffffffffffffffff8111156116fa57600080fd5b61170686828701611632565b9150509250925092565b60005b8381101561172b578181015183820152602001611713565b838111156104ea5750506000910152565b60008151808452611754816020860160208601611710565b601f01601f19169290920160200192915050565b6020815260006115c8602083018461173c565b60006020828403121561178d57600080fd5b5035919050565b600080604083850312156117a757600080fd5b6117b0836115cf565b946020939093013593505050565b6000806000606084860312156117d357600080fd5b6117dc846115cf565b92506117ea602085016115cf565b9150604084013590509250925092565b60006020828403121561180c57600080fd5b6115c8826115cf565b6000806040838503121561182857600080fd5b611831836115cf565b9150602083013567ffffffffffffffff81111561184d57600080fd5b61185985828601611632565b9150509250929050565b600067ffffffffffffffff83111561187d5761187d6115eb565b611890601f8401601f1916602001611601565b90508281528383830111156118a457600080fd5b828260208301376000602084830101529392505050565b6000602082840312156118cd57600080fd5b813567ffffffffffffffff8111156118e457600080fd5b8201601f810184136118f557600080fd5b6112b684823560208401611863565b6000806040838503121561191757600080fd5b611920836115cf565b91506020830135801515811461193557600080fd5b809150509250929050565b6000806000806080858703121561195657600080fd5b61195f856115cf565b935061196d602086016115cf565b925060408501359150606085013567ffffffffffffffff81111561199057600080fd5b8501601f810187136119a157600080fd5b6119b087823560208401611863565b91505092959194509250565b600080604083850312156119cf57600080fd5b6119d8836115cf565b91506119e6602084016115cf565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680611a1957607f821691505b60208210811415611a3a57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600a908201526927b7363c9037bbb732b960b11b604082015260600190565b600060208284031215611a7657600080fd5b81516115c881611592565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611ade9083018461173c565b9695505050505050565b60008151611afa818560208601611710565b9290920192915050565b600080845481600182811c915080831680611b2057607f831692505b6020808410821415611b4057634e487b7160e01b86526022600452602486fd5b818015611b545760018114611b6557611b92565b60ff19861689528489019650611b92565b60008b81526020902060005b86811015611b8a5781548b820152908501908301611b71565b505084890196505b505050505050611ba28185611ae8565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b6000600019821415611bd557611bd5611bab565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611c0157611c01611bdc565b500490565b600082821015611c1857611c18611bab565b500390565b600082611c2c57611c2c611bdc565b500690565b60008219821115611c4457611c44611bab565b50019056fea2646970667358221220622a4bf4b5069fd86fd0332fdd1434a9e61297949b032236b89c924618ef39f364736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101cf5760003560e01c80636352211e11610104578063a0bcfc7f116100a2578063b88d4fde11610071578063b88d4fde146103f9578063c87b56dd1461040c578063d4ee1d901461041f578063e985e9c51461043257600080fd5b8063a0bcfc7f1461039d578063a22cb465146103b0578063aa271e1a146103c3578063ac5a7d5c146103e657600080fd5b806370a08231116100de57806370a08231146103555780638456cb59146103755780638da5cb5b1461037d57806395d89b411461039557600080fd5b80636352211e1461031157806369e2f0fb1461033a5780636cef16e61461034d57600080fd5b80632c0209f51161017157806340c10f191161014b57806340c10f19146102cd57806342842e0e146102e05780634684d7e9146102f35780635c975abb1461030657600080fd5b80632c0209f51461029f5780633dd1eb61146102b25780633f4ba83a146102c557600080fd5b8063081812fc116101ad578063081812fc14610226578063095ea7b31461026757806318160ddd1461027a57806323b872dd1461028c57600080fd5b806301ffc9a7146101d4578063034601ec146101fc57806306fdde0314610211575b600080fd5b6101e76101e23660046115ab565b610460565b60405190151581526020015b60405180910390f35b61020f61020a3660046116b2565b6104b2565b005b6102196104f0565b6040516101f39190611768565b61024f61023436600461177b565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101f3565b61020f610275366004611794565b61057e565b600b545b6040519081526020016101f3565b61020f61029a3660046117be565b610665565b61027e6102ad36600461177b565b61082c565b61020f6102c03660046117fa565b6108a3565b61020f6109bf565b61020f6102db366004611794565b6109f8565b61020f6102ee3660046117be565b610a60565b61020f610301366004611815565b610b3f565b60065460ff166101e7565b61024f61031f36600461177b565b6003602052600090815260409020546001600160a01b031681565b61020f6103483660046117fa565b610bd3565b61020f610ca1565b61027e6103633660046117fa565b60026020526000908152604090205481565b61020f610d46565b60065461024f9061010090046001600160a01b031681565b610219610d7d565b61020f6103ab3660046118bb565b610d8a565b61020f6103be366004611904565b610e07565b6101e76103d13660046117fa565b60086020526000908152604090205460ff1681565b61020f6103f43660046117fa565b610e73565b61020f610407366004611940565b610f32565b61021961041a36600461177b565b610ffd565b60075461024f906001600160a01b031681565b6101e76104403660046119bc565b600560209081526000928352604080842090915290825290205460ff1681565b60006301ffc9a760e01b6001600160e01b03198316148061049157506380ac58cd60e01b6001600160e01b03198316145b806104ac5750635b5e139f60e01b6001600160e01b03198316145b92915050565b60005b81518110156104ea576104e284848484815181106104d5576104d56119ef565b6020026020010151610a60565b6001016104b5565b50505050565b600080546104fd90611a05565b80601f016020809104026020016040519081016040528092919081815260200182805461052990611a05565b80156105765780601f1061054b57610100808354040283529160200191610576565b820191906000526020600020905b81548152906001019060200180831161055957829003601f168201915b505050505081565b6000818152600360205260409020546001600160a01b0316338114806105c757506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6106095760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000818152600360205260409020546001600160a01b038481169116146106bb5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610600565b6001600160a01b0382166107055760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610600565b336001600160a01b038416148061073257506000818152600460205260409020546001600160a01b031633145b8061076057506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b61079d5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610600565b6001600160a01b0380841660008181526002602090815260408083208054600019019055938616808352848320805460010190558583526003825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000818152600360205260408120546001600160a01b03166108905760405162461bcd60e51b815260206004820152601d60248201527f517565727920666f72206e6f6e6578697374656e7420726f6f737465720000006044820152606401610600565b506000908152600a602052604090205490565b60065461010090046001600160a01b031633146108d25760405162461bcd60e51b815260040161060090611a40565b6001600160a01b0381166109185760405162461bcd60e51b815260206004820152600d60248201526c4e6f206164647265737328302960981b6044820152606401610600565b6001600160a01b03811660009081526008602052604090205460ff16156109735760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4819dc985b9d1959608a1b6044820152606401610600565b6001600160a01b038116600081815260086020526040808220805460ff19166001179055517fbd42b6cd963a984d8cbff85acad4dd2c87a6d85ac756d16e6d2ec5ce6c8f07309190a250565b60065461010090046001600160a01b031633146109ee5760405162461bcd60e51b815260040161060090611a40565b6109f6611096565b565b3360009081526008602052604090205460ff16610a455760405162461bcd60e51b815260206004820152600b60248201526a27b7363c9036b4b73a32b960a91b6044820152606401610600565b600b805460018101909155610a5b838284611129565b505050565b610a6b838383610665565b6001600160a01b0382163b1580610b235750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a401602060405180830381600087803b158015610adf57600080fd5b505af1158015610af3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b179190611a64565b6001600160e01b031916145b610a5b5760405162461bcd60e51b815260040161060090611a81565b3360009081526008602052604090205460ff16610b8c5760405162461bcd60e51b815260206004820152600b60248201526a27b7363c9036b4b73a32b960a91b6044820152606401610600565b600b5460005b8251811015610bcb57610bbf8483858481518110610bb257610bb26119ef565b6020026020010151611129565b60019182019101610b92565b50600b555050565b60065461010090046001600160a01b03163314610c025760405162461bcd60e51b815260040161060090611a40565b6001600160a01b03811660009081526008602052604090205460ff16610c585760405162461bcd60e51b815260206004820152600b60248201526a139bdd0819dc985b9d195960aa1b6044820152606401610600565b6001600160a01b038116600081815260086020526040808220805460ff19169055517ff474b72f3e21ebafdad7dadfcb99ae7eabdbf538d52a0e0eecbf8ce0fa7043fe9190a250565b6007546001600160a01b03163314610cec5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c903732bb9037bbb732b960911b6044820152606401610600565b60068054610100600160a81b031981166101003381810292909217909355604051929091046001600160a01b03169182907faac18e3887f7d855b2483e20615f8e3fb6efc18e25502090082b47047fb57c7390600090a350565b60065461010090046001600160a01b03163314610d755760405162461bcd60e51b815260040161060090611a40565b6109f661113d565b600180546104fd90611a05565b60065461010090046001600160a01b03163314610db95760405162461bcd60e51b815260040161060090611a40565b8051610dcc9060099060208401906114f9565b507f157eb1fffc1000c7f0ee8cb1f87be2620ec910b8be9e3af7db8c97328e2757cf81604051610dfc9190611768565b60405180910390a150565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b60065461010090046001600160a01b03163314610ea25760405162461bcd60e51b815260040161060090611a40565b6001600160a01b038116610ee85760405162461bcd60e51b815260206004820152600d60248201526c4e6f206164647265737328302960981b6044820152606401610600565b600780546001600160a01b0319166001600160a01b0383169081179091556040517fd52a054f85e9a057277cd95bf6d5da45465068f0467ec7991f3fcc017be6b72590600090a250565b610f3d848484610665565b6001600160a01b0383163b1580610fe15750604051630a85bd0160e11b808252906001600160a01b0385169063150b7a0290610f83903390899088908890600401611aab565b602060405180830381600087803b158015610f9d57600080fd5b505af1158015610fb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd59190611a64565b6001600160e01b031916145b6104ea5760405162461bcd60e51b815260040161060090611a81565b6000818152600360205260409020546060906001600160a01b03166110645760405162461bcd60e51b815260206004820152601d60248201527f517565727920666f72206e6f6e6578697374656e7420726f6f737465720000006044820152606401610600565b600961106f836111b8565b604051602001611080929190611b04565b6040516020818303038152906040529050919050565b60065460ff166110df5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610600565b6006805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b61113383836112be565b610a5b828261139d565b60065460ff16156111835760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610600565b6006805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861110c3390565b6060816111dc5750506040805180820190915260018152600360fc1b602082015290565b8160005b811561120657806111f081611bc1565b91506111ff9050600a83611bf2565b91506111e0565b60008167ffffffffffffffff811115611221576112216115eb565b6040519080825280601f01601f19166020018201604052801561124b576020820181803683370190505b5090505b84156112b657611260600183611c06565b915061126d600a86611c1d565b611278906030611c31565b60f81b81838151811061128d5761128d6119ef565b60200101906001600160f81b031916908160001a9053506112af600a86611bf2565b945061124f565b949350505050565b6112c882826113ee565b6001600160a01b0382163b158061137d5750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a401602060405180830381600087803b15801561133957600080fd5b505af115801561134d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113719190611a64565b6001600160e01b031916145b6113995760405162461bcd60e51b815260040161060090611a81565b5050565b6000828152600a6020526040908190208290555182907fe46d199dd459049fd4c9c752a8b7559ad5dbc0ddb9b399cd9db4636fd5aa8a83906113e29084815260200190565b60405180910390a25050565b6001600160a01b0382166114385760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610600565b6000818152600360205260409020546001600160a01b03161561148e5760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b6044820152606401610600565b6001600160a01b038216600081815260026020908152604080832080546001019055848352600390915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b82805461150590611a05565b90600052602060002090601f016020900481019282611527576000855561156d565b82601f1061154057805160ff191683800117855561156d565b8280016001018555821561156d579182015b8281111561156d578251825591602001919060010190611552565b5061157992915061157d565b5090565b5b80821115611579576000815560010161157e565b6001600160e01b0319811681146115a857600080fd5b50565b6000602082840312156115bd57600080fd5b81356115c881611592565b9392505050565b80356001600160a01b03811681146115e657600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561162a5761162a6115eb565b604052919050565b600082601f83011261164357600080fd5b8135602067ffffffffffffffff82111561165f5761165f6115eb565b8160051b61166e828201611601565b928352848101820192828101908785111561168857600080fd5b83870192505b848310156116a75782358252918301919083019061168e565b979650505050505050565b6000806000606084860312156116c757600080fd5b6116d0846115cf565b92506116de602085016115cf565b9150604084013567ffffffffffffffff8111156116fa57600080fd5b61170686828701611632565b9150509250925092565b60005b8381101561172b578181015183820152602001611713565b838111156104ea5750506000910152565b60008151808452611754816020860160208601611710565b601f01601f19169290920160200192915050565b6020815260006115c8602083018461173c565b60006020828403121561178d57600080fd5b5035919050565b600080604083850312156117a757600080fd5b6117b0836115cf565b946020939093013593505050565b6000806000606084860312156117d357600080fd5b6117dc846115cf565b92506117ea602085016115cf565b9150604084013590509250925092565b60006020828403121561180c57600080fd5b6115c8826115cf565b6000806040838503121561182857600080fd5b611831836115cf565b9150602083013567ffffffffffffffff81111561184d57600080fd5b61185985828601611632565b9150509250929050565b600067ffffffffffffffff83111561187d5761187d6115eb565b611890601f8401601f1916602001611601565b90508281528383830111156118a457600080fd5b828260208301376000602084830101529392505050565b6000602082840312156118cd57600080fd5b813567ffffffffffffffff8111156118e457600080fd5b8201601f810184136118f557600080fd5b6112b684823560208401611863565b6000806040838503121561191757600080fd5b611920836115cf565b91506020830135801515811461193557600080fd5b809150509250929050565b6000806000806080858703121561195657600080fd5b61195f856115cf565b935061196d602086016115cf565b925060408501359150606085013567ffffffffffffffff81111561199057600080fd5b8501601f810187136119a157600080fd5b6119b087823560208401611863565b91505092959194509250565b600080604083850312156119cf57600080fd5b6119d8836115cf565b91506119e6602084016115cf565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680611a1957607f821691505b60208210811415611a3a57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600a908201526927b7363c9037bbb732b960b11b604082015260600190565b600060208284031215611a7657600080fd5b81516115c881611592565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611ade9083018461173c565b9695505050505050565b60008151611afa818560208601611710565b9290920192915050565b600080845481600182811c915080831680611b2057607f831692505b6020808410821415611b4057634e487b7160e01b86526022600452602486fd5b818015611b545760018114611b6557611b92565b60ff19861689528489019650611b92565b60008b81526020902060005b86811015611b8a5781548b820152908501908301611b71565b505084890196505b505050505050611ba28185611ae8565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b6000600019821415611bd557611bd5611bab565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611c0157611c01611bdc565b500490565b600082821015611c1857611c18611bab565b500390565b600082611c2c57611c2c611bdc565b500690565b60008219821115611c4457611c44611bab565b50019056fea2646970667358221220622a4bf4b5069fd86fd0332fdd1434a9e61297949b032236b89c924618ef39f364736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4541,
        "contract": "contracts/Rooster.sol:Rooster",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 4543,
        "contract": "contracts/Rooster.sol:Rooster",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 4554,
        "contract": "contracts/Rooster.sol:Rooster",
        "label": "balanceOf",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 4558,
        "contract": "contracts/Rooster.sol:Rooster",
        "label": "ownerOf",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 4562,
        "contract": "contracts/Rooster.sol:Rooster",
        "label": "getApproved",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 4568,
        "contract": "contracts/Rooster.sol:Rooster",
        "label": "isApprovedForAll",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 122,
        "contract": "contracts/Rooster.sol:Rooster",
        "label": "_paused",
        "offset": 0,
        "slot": "6",
        "type": "t_bool"
      },
      {
        "astId": 5036,
        "contract": "contracts/Rooster.sol:Rooster",
        "label": "owner",
        "offset": 1,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 5038,
        "contract": "contracts/Rooster.sol:Rooster",
        "label": "newOwner",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 5042,
        "contract": "contracts/Rooster.sol:Rooster",
        "label": "isMinter",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 7522,
        "contract": "contracts/Rooster.sol:Rooster",
        "label": "_baseUri",
        "offset": 0,
        "slot": "9",
        "type": "t_string_storage"
      },
      {
        "astId": 7526,
        "contract": "contracts/Rooster.sol:Rooster",
        "label": "_breeds",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 7362,
        "contract": "contracts/Rooster.sol:Rooster",
        "label": "_roosterIdCounter",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}