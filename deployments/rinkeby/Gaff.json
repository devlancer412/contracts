{
  "address": "0x6500DFfBA3cC0a7DAc615F5531EbF5664012a406",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "baseUri_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "IsPaused",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotPaused",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "role",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "gaffId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gaffType",
          "type": "uint256"
        }
      ],
      "name": "GaffTypeSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerPulled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "pushedOwner",
          "type": "address"
        }
      ],
      "name": "OwnerPushed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "role",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "role",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseUri",
          "type": "string"
        }
      ],
      "name": "UpdateBaseUri",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "gaffTypes",
          "type": "uint256[]"
        }
      ],
      "name": "batchMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gaffId",
          "type": "uint256"
        }
      ],
      "name": "gaffTypes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "role",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "role",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "gaffType",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "newOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pullOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "pushOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "role",
          "type": "string"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "role",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "gaffIds",
          "type": "uint256[]"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newUri",
          "type": "string"
        }
      ],
      "name": "setBaseUri",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gaffId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x52f23dd559f870e8bd5c9e89a4b5fab5754eb9a2a54285a76d63565bb7432a7c",
  "receipt": {
    "to": null,
    "from": "0x374180e6E1b14454C18e44b635A95e7d37160570",
    "contractAddress": "0x6500DFfBA3cC0a7DAc615F5531EbF5664012a406",
    "transactionIndex": 18,
    "gasUsed": "1825304",
    "logsBloom": "0x
    "blockHash": "0x1936c32fe78e13739946928976c110b5d51a8df63eaa091b3a3aa2e84c217551",
    "transactionHash": "0x52f23dd559f870e8bd5c9e89a4b5fab5754eb9a2a54285a76d63565bb7432a7c",
    "logs": [
      {
        "transactionIndex": 18,
        "blockNumber": 10437328,
        "transactionHash": "0x52f23dd559f870e8bd5c9e89a4b5fab5754eb9a2a54285a76d63565bb7432a7c",
        "address": "0x6500DFfBA3cC0a7DAc615F5531EbF5664012a406",
        "topics": [
          "0xaac18e3887f7d855b2483e20615f8e3fb6efc18e25502090082b47047fb57c73",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000374180e6e1b14454c18e44b635a95e7d37160570"
        ],
        "data": "0x",
        "logIndex": 26,
        "blockHash": "0x1936c32fe78e13739946928976c110b5d51a8df63eaa091b3a3aa2e84c217551"
      },
      {
        "transactionIndex": 18,
        "blockNumber": 10437328,
        "transactionHash": "0x52f23dd559f870e8bd5c9e89a4b5fab5754eb9a2a54285a76d63565bb7432a7c",
        "address": "0x6500DFfBA3cC0a7DAc615F5531EbF5664012a406",
        "topics": [
          "0x157eb1fffc1000c7f0ee8cb1f87be2620ec910b8be9e3af7db8c97328e2757cf"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000",
        "logIndex": 27,
        "blockHash": "0x1936c32fe78e13739946928976c110b5d51a8df63eaa091b3a3aa2e84c217551"
      }
    ],
    "blockNumber": 10437328,
    "cumulativeGasUsed": "8741490",
    "status": 1,
    "byzantium": true
  },
  "args": [
    ""
  ],
  "numDeployments": 3,
  "solcInputHash": "08383365ccd50937a9fb45171093b767",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseUri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"IsPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPaused\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gaffId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gaffType\",\"type\":\"uint256\"}],\"name\":\"GaffTypeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pushedOwner\",\"type\":\"address\"}],\"name\":\"OwnerPushed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseUri\",\"type\":\"string\"}],\"name\":\"UpdateBaseUri\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"gaffTypes\",\"type\":\"uint256[]\"}],\"name\":\"batchMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gaffId\",\"type\":\"uint256\"}],\"name\":\"gaffTypes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gaffType\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"pushOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"gaffIds\",\"type\":\"uint256[]\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newUri\",\"type\":\"string\"}],\"name\":\"setBaseUri\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gaffId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Gaff.sol\":\"Gaff\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\"},\"@rari-capital/solmate/src/tokens/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern, minimalist, and gas efficient ERC-721 implementation.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC721.sol)\\n/// @dev Note that balanceOf does not revert if passed the zero address, in defiance of the ERC.\\nabstract contract ERC721 {\\n    /*///////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 indexed id);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 indexed id);\\n\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /*///////////////////////////////////////////////////////////////\\n                          METADATA STORAGE/LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    function tokenURI(uint256 id) public view virtual returns (string memory);\\n\\n    /*///////////////////////////////////////////////////////////////\\n                            ERC721 STORAGE                        \\n    //////////////////////////////////////////////////////////////*/\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(uint256 => address) public ownerOf;\\n\\n    mapping(uint256 => address) public getApproved;\\n\\n    mapping(address => mapping(address => bool)) public isApprovedForAll;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(string memory _name, string memory _symbol) {\\n        name = _name;\\n        symbol = _symbol;\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC721 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 id) public virtual {\\n        address owner = ownerOf[id];\\n\\n        require(msg.sender == owner || isApprovedForAll[owner][msg.sender], \\\"NOT_AUTHORIZED\\\");\\n\\n        getApproved[id] = spender;\\n\\n        emit Approval(owner, spender, id);\\n    }\\n\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        isApprovedForAll[msg.sender][operator] = approved;\\n\\n        emit ApprovalForAll(msg.sender, operator, approved);\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 id\\n    ) public virtual {\\n        require(from == ownerOf[id], \\\"WRONG_FROM\\\");\\n\\n        require(to != address(0), \\\"INVALID_RECIPIENT\\\");\\n\\n        require(\\n            msg.sender == from || msg.sender == getApproved[id] || isApprovedForAll[from][msg.sender],\\n            \\\"NOT_AUTHORIZED\\\"\\n        );\\n\\n        // Underflow of the sender's balance is impossible because we check for\\n        // ownership above and the recipient's balance can't realistically overflow.\\n        unchecked {\\n            balanceOf[from]--;\\n\\n            balanceOf[to]++;\\n        }\\n\\n        ownerOf[id] = to;\\n\\n        delete getApproved[id];\\n\\n        emit Transfer(from, to, id);\\n    }\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id\\n    ) public virtual {\\n        transferFrom(from, to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\") ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        bytes memory data\\n    ) public virtual {\\n        transferFrom(from, to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data) ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC165 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function supportsInterface(bytes4 interfaceId) public pure virtual returns (bool) {\\n        return\\n            interfaceId == 0x01ffc9a7 || // ERC165 Interface ID for ERC165\\n            interfaceId == 0x80ac58cd || // ERC165 Interface ID for ERC721\\n            interfaceId == 0x5b5e139f; // ERC165 Interface ID for ERC721Metadata\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                       INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 id) internal virtual {\\n        require(to != address(0), \\\"INVALID_RECIPIENT\\\");\\n\\n        require(ownerOf[id] == address(0), \\\"ALREADY_MINTED\\\");\\n\\n        // Counter overflow is incredibly unrealistic.\\n        unchecked {\\n            balanceOf[to]++;\\n        }\\n\\n        ownerOf[id] = to;\\n\\n        emit Transfer(address(0), to, id);\\n    }\\n\\n    function _burn(uint256 id) internal virtual {\\n        address owner = ownerOf[id];\\n\\n        require(ownerOf[id] != address(0), \\\"NOT_MINTED\\\");\\n\\n        // Ownership check above ensures no underflow.\\n        unchecked {\\n            balanceOf[owner]--;\\n        }\\n\\n        delete ownerOf[id];\\n\\n        delete getApproved[id];\\n\\n        emit Transfer(owner, address(0), id);\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                       INTERNAL SAFE MINT LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _safeMint(address to, uint256 id) internal virtual {\\n        _mint(to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, address(0), id, \\\"\\\") ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n\\n    function _safeMint(\\n        address to,\\n        uint256 id,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, address(0), id, data) ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n}\\n\\n/// @notice A generic interface for a contract which properly accepts ERC721 tokens.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC721.sol)\\ninterface ERC721TokenReceiver {\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xf97378ab999188b3d5d97037fabbecbc726892c74cba6536899b852eb4756d6a\",\"license\":\"AGPL-3.0-only\"},\"contracts/Auth.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.9;\\n\\nlibrary Strings {\\n  function toBytes32(string memory text) internal pure returns (bytes32) {\\n    return bytes32(bytes(text));\\n  }\\n\\n  function toString(bytes32 text) internal pure returns (string memory) {\\n    return string(abi.encodePacked(text));\\n  }\\n}\\n\\ncontract Auth {\\n  //Address of current owner\\n  address public owner;\\n  //Address of new owner (Note: new owner must pull to be an owner)\\n  address public newOwner;\\n  //If paused or not\\n  uint256 private _paused;\\n  //Roles mapping (role => address => has role)\\n  mapping(bytes32 => mapping(address => bool)) private _roles;\\n\\n  //Fires when a new owner is pushed\\n  event OwnerPushed(address indexed pushedOwner);\\n  //Fires when new owner pulled\\n  event OwnerPulled(address indexed previousOwner, address indexed newOwner);\\n  //Fires when account is granted role\\n  event RoleGranted(string indexed role, address indexed account, address indexed sender);\\n  //Fires when accoount is revoked role\\n  event RoleRevoked(string indexed role, address indexed account, address indexed sender);\\n  //Fires when pause is triggered by account\\n  event Paused(address account);\\n  //Fires when pause is lifted by account\\n  event Unpaused(address account);\\n\\n  error Unauthorized(string role, address user);\\n  error IsPaused();\\n  error NotPaused();\\n\\n  constructor() {\\n    owner = msg.sender;\\n    emit OwnerPulled(address(0), msg.sender);\\n  }\\n\\n  modifier whenNotPaused() {\\n    if (paused()) revert IsPaused();\\n    _;\\n  }\\n\\n  modifier whenPaused() {\\n    if (!paused()) revert NotPaused();\\n    _;\\n  }\\n\\n  modifier onlyOwner() {\\n    if (msg.sender != owner) revert Unauthorized(\\\"OWNER\\\", msg.sender);\\n    _;\\n  }\\n\\n  modifier onlyRole(string memory role) {\\n    if (!hasRole(role, msg.sender)) revert Unauthorized(role, msg.sender);\\n    _;\\n  }\\n\\n  function hasRole(string memory role, address account) public view virtual returns (bool) {\\n    return _roles[Strings.toBytes32(role)][account];\\n  }\\n\\n  function paused() public view virtual returns (bool) {\\n    return _paused == 1 ? true : false;\\n  }\\n\\n  function pushOwner(address account) public virtual onlyOwner {\\n    require(account != address(0), \\\"No address(0)\\\");\\n    require(account != owner, \\\"Only new owner\\\");\\n    newOwner = account;\\n    emit OwnerPushed(account);\\n  }\\n\\n  function pullOwner() public virtual {\\n    if (msg.sender != newOwner) revert Unauthorized(\\\"NEW_OWNER\\\", msg.sender);\\n    address oldOwner = owner;\\n    owner = msg.sender;\\n    emit OwnerPulled(oldOwner, msg.sender);\\n  }\\n\\n  function grantRole(string memory role, address account) public virtual onlyOwner {\\n    require(bytes(role).length > 0, \\\"Role not given\\\");\\n    require(account != address(0), \\\"No address(0)\\\");\\n    _grantRole(role, account);\\n  }\\n\\n  function revokeRole(string memory role, address account) public virtual onlyOwner {\\n    require(hasRole(role, account), \\\"Role not granted\\\");\\n    _revokeRole(role, account);\\n  }\\n\\n  function renounceRole(string memory role) public virtual {\\n    require(hasRole(role, msg.sender), \\\"Role not granted\\\");\\n    _revokeRole(role, msg.sender);\\n  }\\n\\n  function pause() public virtual onlyRole(\\\"PAUSER\\\") whenNotPaused {\\n    _paused = 1;\\n    emit Paused(msg.sender);\\n  }\\n\\n  function unpause() public virtual onlyRole(\\\"PAUSER\\\") whenPaused {\\n    _paused = 0;\\n    emit Unpaused(msg.sender);\\n  }\\n\\n  function _grantRole(string memory role, address account) internal virtual {\\n    if (!hasRole(role, account)) {\\n      bytes32 encodedRole = Strings.toBytes32(role);\\n      _roles[encodedRole][account] = true;\\n      emit RoleGranted(role, account, msg.sender);\\n    }\\n  }\\n\\n  function _revokeRole(string memory role, address account) internal virtual {\\n    bytes32 encodedRole = Strings.toBytes32(role);\\n    _roles[encodedRole][account] = false;\\n    emit RoleRevoked(role, account, msg.sender);\\n  }\\n}\\n\",\"keccak256\":\"0xdc8d6dbb9c1781cfb232484fcdbbfb0fbadba69cbfe5597fd835cf2d9a7c854d\",\"license\":\"AGPL-3.0\"},\"contracts/Gaff.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.9;\\n\\nimport {ERC721} from \\\"@rari-capital/solmate/src/tokens/ERC721.sol\\\";\\nimport {GaffMetadata} from \\\"./GaffMetadata.sol\\\";\\nimport {Auth} from \\\"./Auth.sol\\\";\\n\\ncontract Gaff is ERC721, Auth, GaffMetadata {\\n  //Current gaffId count\\n  uint256 private _gaffIdCounter = 0;\\n\\n  constructor(string memory baseUri_) ERC721(\\\"Gaff\\\", \\\"GAFF\\\") {\\n    setBaseUri(baseUri_);\\n  }\\n\\n  function totalSupply() public view returns (uint256) {\\n    return _gaffIdCounter;\\n  }\\n\\n  function safeBatchTransferFrom(\\n    address from,\\n    address to,\\n    uint256[] memory gaffIds\\n  ) external {\\n    for (uint256 i = 0; i < gaffIds.length; ) {\\n      safeTransferFrom(from, to, gaffIds[i]);\\n      unchecked {\\n        i++;\\n      }\\n    }\\n  }\\n\\n  function mint(address to, uint256 gaffType) external onlyRole(\\\"MINTER\\\") {\\n    uint256 gaffId = _gaffIdCounter;\\n\\n    unchecked {\\n      _gaffIdCounter++;\\n    }\\n\\n    _mint(to, gaffId, gaffType);\\n  }\\n\\n  function batchMint(address to, uint256[] memory gaffTypes) external onlyRole(\\\"MINTER\\\") {\\n    uint256 gaffId = _gaffIdCounter;\\n\\n    for (uint256 i = 0; i < gaffTypes.length; ) {\\n      _mint(to, gaffId, gaffTypes[i]);\\n\\n      unchecked {\\n        gaffId++;\\n        i++;\\n      }\\n    }\\n\\n    _gaffIdCounter = gaffId;\\n  }\\n\\n  function _mint(\\n    address to,\\n    uint256 gaffId,\\n    uint256 gaffType\\n  ) private {\\n    _safeMint(to, gaffId);\\n    _setGaffType(gaffId, gaffType);\\n  }\\n}\\n\",\"keccak256\":\"0x4ee0cb85653f18754cfe59ecb5aa3e1526a0b5b88fdc3830d18ec83f9e514765\",\"license\":\"AGPL-3.0\"},\"contracts/GaffMetadata.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.9;\\n\\nimport {ERC721} from \\\"@rari-capital/solmate/src/tokens/ERC721.sol\\\";\\nimport {Strings} from \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\nimport {Auth} from \\\"./Auth.sol\\\";\\n\\nabstract contract GaffMetadata is ERC721, Auth {\\n  using Strings for uint256;\\n\\n  //Gaff metadata base uri\\n  string private _baseUri;\\n  //Maps gaff id to gaff types\\n  mapping(uint256 => uint256) private _gaffTypes;\\n\\n  //Fires when base uri is updated\\n  event UpdateBaseUri(string baseUri);\\n  //Fires when gaff type is set\\n  event GaffTypeSet(uint256 indexed gaffId, uint256 gaffType);\\n\\n  function gaffTypes(uint256 gaffId) public view returns (uint256) {\\n    require(_exists(gaffId), \\\"Query for nonexistent gaff\\\");\\n    return _gaffTypes[gaffId];\\n  }\\n\\n  function tokenURI(uint256 gaffId) public view override returns (string memory) {\\n    require(_exists(gaffId), \\\"Query for nonexistent gaff\\\");\\n    return string(abi.encodePacked(_baseUri, gaffId.toString()));\\n  }\\n\\n  function setBaseUri(string memory newUri) public onlyOwner {\\n    _baseUri = newUri;\\n    emit UpdateBaseUri(newUri);\\n  }\\n\\n  function _setGaffType(uint256 gaffId, uint256 gaffType) internal {\\n    _gaffTypes[gaffId] = gaffType;\\n    emit GaffTypeSet(gaffId, gaffType);\\n  }\\n\\n  function _exists(uint256 tokenId) internal view returns (bool) {\\n    return ownerOf[tokenId] != address(0);\\n  }\\n}\\n\",\"keccak256\":\"0x104eca8759a8d7f433027c2bc4820e9da2d3a4def7f04aa915ac7a051b9dab6c\",\"license\":\"AGPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60806040526000600c553480156200001657600080fd5b506040516200222f3803806200222f833981016040819052620000399162000289565b6040518060400160405280600481526020016323b0b33360e11b8152506040518060400160405280600481526020016323a0a32360e11b81525081600090805190602001906200008b9291906200019a565b508051620000a19060019060208401906200019a565b5050600680546001600160a01b031916339081179091556040519091506000907faac18e3887f7d855b2483e20615f8e3fb6efc18e25502090082b47047fb57c73908290a3620000f181620000f8565b50620003b3565b6006546001600160a01b031633146200014857604080516309ab81ed60e01b81526004810191909152600560448201526427aba722a960d91b606482015233602482015260840160405180910390fd5b80516200015d90600a9060208401906200019a565b507f157eb1fffc1000c7f0ee8cb1f87be2620ec910b8be9e3af7db8c97328e2757cf816040516200018f919062000341565b60405180910390a150565b828054620001a89062000376565b90600052602060002090601f016020900481019282620001cc576000855562000217565b82601f10620001e757805160ff191683800117855562000217565b8280016001018555821562000217579182015b8281111562000217578251825591602001919060010190620001fa565b506200022592915062000229565b5090565b5b808211156200022557600081556001016200022a565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200027357818101518382015260200162000259565b8381111562000283576000848401525b50505050565b6000602082840312156200029c57600080fd5b81516001600160401b0380821115620002b457600080fd5b818401915084601f830112620002c957600080fd5b815181811115620002de57620002de62000240565b604051601f8201601f19908116603f0116810190838211818310171562000309576200030962000240565b816040528281528760208487010111156200032357600080fd5b6200033683602083016020880162000256565b979650505050505050565b60208152600082518060208401526200036281604085016020870162000256565b601f01601f19169190910160400192915050565b600181811c908216806200038b57607f821691505b60208210811415620003ad57634e487b7160e01b600052602260045260246000fd5b50919050565b611e6c80620003c36000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80636cef16e611610104578063a0bcfc7f116100a2578063c19ae2ed11610071578063c19ae2ed146103ff578063c87b56dd14610412578063d4ee1d9014610425578063e985e9c51461043857600080fd5b8063a0bcfc7f146103b3578063a22cb465146103c6578063ac5a7d5c146103d9578063b88d4fde146103ec57600080fd5b8063731f21a0116100de578063731f21a01461037d5780638456cb59146103905780638da5cb5b1461039857806395d89b41146103ab57600080fd5b80636cef16e61461034257806370768f861461034a57806370a082311461035d57600080fd5b80633f4ba83a1161017c5780635c975abb1161014b5780635c975abb146102eb5780636352211e146102f357806368e05a651461031c5780636c9cd0971461032f57600080fd5b80633f4ba83a146102aa57806340c10f19146102b257806342842e0e146102c55780634684d7e9146102d857600080fd5b8063081812fc116101b8578063081812fc14610231578063095ea7b31461027257806318160ddd1461028557806323b872dd1461029757600080fd5b806301ffc9a7146101df578063034601ec1461020757806306fdde031461021c575b600080fd5b6101f26101ed3660046116d1565b610466565b60405190151581526020015b60405180910390f35b61021a6102153660046117d8565b6104b8565b005b6102246104f6565b6040516101fe919061188e565b61025a61023f3660046118a1565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101fe565b61021a6102803660046118ba565b610584565b600c545b6040519081526020016101fe565b61021a6102a53660046118e4565b61066b565b61021a610832565b61021a6102c03660046118ba565b6108dd565b61021a6102d33660046118e4565b61093d565b61021a6102e6366004611920565b610a21565b6101f2610ab3565b61025a6103013660046118a1565b6003602052600090815260409020546001600160a01b031681565b61028961032a3660046118a1565b610acb565b6101f261033d3660046119e6565b610b42565b61021a610b83565b61021a610358366004611a34565b610c22565b61028961036b366004611a69565b60026020526000908152604090205481565b61021a61038b3660046119e6565b610c78565b61021a610cfc565b60065461025a906001600160a01b031681565b610224610da1565b61021a6103c1366004611a34565b610dae565b61021a6103d4366004611a84565b610e1e565b61021a6103e7366004611a69565b610e8a565b61021a6103fa366004611ac0565b610f96565b61021a61040d3660046119e6565b611061565b6102246104203660046118a1565b611120565b60075461025a906001600160a01b031681565b6101f2610446366004611b3c565b600560209081526000928352604080842090915290825290205460ff1681565b60006301ffc9a760e01b6001600160e01b03198316148061049757506380ac58cd60e01b6001600160e01b03198316145b806104b25750635b5e139f60e01b6001600160e01b03198316145b92915050565b60005b81518110156104f0576104e884848484815181106104db576104db611b66565b602002602001015161093d565b6001016104bb565b50505050565b6000805461050390611b7c565b80601f016020809104026020016040519081016040528092919081815260200182805461052f90611b7c565b801561057c5780601f106105515761010080835404028352916020019161057c565b820191906000526020600020905b81548152906001019060200180831161055f57829003601f168201915b505050505081565b6000818152600360205260409020546001600160a01b0316338114806105cd57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b61060f5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000818152600360205260409020546001600160a01b038481169116146106c15760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610606565b6001600160a01b03821661070b5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610606565b336001600160a01b038416148061073857506000818152600460205260409020546001600160a01b031633145b8061076657506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b6107a35760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610606565b6001600160a01b0380841660008181526002602090815260408083208054600019019055938616808352848320805460010190558583526003825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b604051806040016040528060068152602001652820aaa9a2a960d11b81525061085b8133610b42565b61087c5780336040516309ab81ed60e01b8152600401610606929190611bb7565b610884610ab3565b6108a157604051636cd6020160e01b815260040160405180910390fd5b60006008556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa906020015b60405180910390a150565b6040518060400160405280600681526020016526a4a72a22a960d11b8152506109068133610b42565b6109275780336040516309ab81ed60e01b8152600401610606929190611bb7565b600c8054600181019091556104f08482856111b9565b61094883838361066b565b6001600160a01b0382163b1580610a005750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a401602060405180830381600087803b1580156109bc57600080fd5b505af11580156109d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f49190611be1565b6001600160e01b031916145b610a1c5760405162461bcd60e51b815260040161060690611bfe565b505050565b6040518060400160405280600681526020016526a4a72a22a960d11b815250610a4a8133610b42565b610a6b5780336040516309ab81ed60e01b8152600401610606929190611bb7565b600c5460005b8351811015610aaa57610a9e8583868481518110610a9157610a91611b66565b60200260200101516111b9565b60019182019101610a71565b50600c55505050565b6000600854600114610ac55750600090565b50600190565b6000818152600360205260408120546001600160a01b0316610b2f5760405162461bcd60e51b815260206004820152601a60248201527f517565727920666f72206e6f6e6578697374656e7420676166660000000000006044820152606401610606565b506000908152600b602052604090205490565b600060096000610b51856111cd565b8152602080820192909252604090810160009081206001600160a01b038616825290925290205460ff16905092915050565b6007546001600160a01b03163314610bd257604080516309ab81ed60e01b8152600481019190915260096044820152682722abafa7aba722a960b91b6064820152336024820152608401610606565b60068054336001600160a01b0319821681179092556040516001600160a01b03909116919082907faac18e3887f7d855b2483e20615f8e3fb6efc18e25502090082b47047fb57c7390600090a350565b610c2c8133610b42565b610c6b5760405162461bcd60e51b815260206004820152601060248201526f149bdb19481b9bdd0819dc985b9d195960821b6044820152606401610606565b610c7581336111d8565b50565b6006546001600160a01b03163314610ca557336040516309ab81ed60e01b81526004016106069190611c28565b610caf8282610b42565b610cee5760405162461bcd60e51b815260206004820152601060248201526f149bdb19481b9bdd0819dc985b9d195960821b6044820152606401610606565b610cf882826111d8565b5050565b604051806040016040528060068152602001652820aaa9a2a960d11b815250610d258133610b42565b610d465780336040516309ab81ed60e01b8152600401610606929190611bb7565b610d4e610ab3565b15610d6c57604051631309a56360e01b815260040160405180910390fd5b60016008556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258906020016108d2565b6001805461050390611b7c565b6006546001600160a01b03163314610ddb57336040516309ab81ed60e01b81526004016106069190611c28565b8051610dee90600a906020840190611622565b507f157eb1fffc1000c7f0ee8cb1f87be2620ec910b8be9e3af7db8c97328e2757cf816040516108d2919061188e565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6006546001600160a01b03163314610eb757336040516309ab81ed60e01b81526004016106069190611c28565b6001600160a01b038116610efd5760405162461bcd60e51b815260206004820152600d60248201526c4e6f206164647265737328302960981b6044820152606401610606565b6006546001600160a01b0382811691161415610f4c5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c903732bb9037bbb732b960911b6044820152606401610606565b600780546001600160a01b0319166001600160a01b0383169081179091556040517fd52a054f85e9a057277cd95bf6d5da45465068f0467ec7991f3fcc017be6b72590600090a250565b610fa184848461066b565b6001600160a01b0383163b15806110455750604051630a85bd0160e11b808252906001600160a01b0385169063150b7a0290610fe7903390899088908890600401611c58565b602060405180830381600087803b15801561100157600080fd5b505af1158015611015573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110399190611be1565b6001600160e01b031916145b6104f05760405162461bcd60e51b815260040161060690611bfe565b6006546001600160a01b0316331461108e57336040516309ab81ed60e01b81526004016106069190611c28565b60008251116110d05760405162461bcd60e51b815260206004820152600e60248201526d2937b632903737ba1033b4bb32b760911b6044820152606401610606565b6001600160a01b0381166111165760405162461bcd60e51b815260206004820152600d60248201526c4e6f206164647265737328302960981b6044820152606401610606565b610cf88282611256565b6000818152600360205260409020546060906001600160a01b03166111875760405162461bcd60e51b815260206004820152601a60248201527f517565727920666f72206e6f6e6578697374656e7420676166660000000000006044820152606401610606565b600a611192836112e5565b6040516020016111a3929190611cb1565b6040516020818303038152906040529050919050565b6111c383836113eb565b610a1c82826114c6565b60006104b282611d58565b60006111e3836111cd565b60008181526009602090815260408083206001600160a01b038716808552925291829020805460ff1916905590519192503391611221908690611d7c565b604051908190038120907ff3a2b91552b535c273a48d8b7453c8b0b287e20e51d74121eb50d975dbaa506d90600090a4505050565b6112608282610b42565b610cf857600061126f836111cd565b60008181526009602090815260408083206001600160a01b038716808552925291829020805460ff19166001179055905191925033916112b0908690611d7c565b604051908190038120907fe0ca4f6d52d59033a91ab89e93c98f9acada14e0086d8b1038284f42e6d5325790600090a4505050565b6060816113095750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611333578061131d81611dae565b915061132c9050600a83611ddf565b915061130d565b60008167ffffffffffffffff81111561134e5761134e611711565b6040519080825280601f01601f191660200182016040528015611378576020820181803683370190505b5090505b84156113e35761138d600183611df3565b915061139a600a86611e0a565b6113a5906030611e1e565b60f81b8183815181106113ba576113ba611b66565b60200101906001600160f81b031916908160001a9053506113dc600a86611ddf565b945061137c565b949350505050565b6113f58282611517565b6001600160a01b0382163b15806114aa5750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a401602060405180830381600087803b15801561146657600080fd5b505af115801561147a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061149e9190611be1565b6001600160e01b031916145b610cf85760405162461bcd60e51b815260040161060690611bfe565b6000828152600b6020526040908190208290555182907fdd87ed9e371ab4208e2bf67d20e1ee6310c6087d87c9f73773b09e91e87abc389061150b9084815260200190565b60405180910390a25050565b6001600160a01b0382166115615760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610606565b6000818152600360205260409020546001600160a01b0316156115b75760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b6044820152606401610606565b6001600160a01b038216600081815260026020908152604080832080546001019055848352600390915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b82805461162e90611b7c565b90600052602060002090601f0160209004810192826116505760008555611696565b82601f1061166957805160ff1916838001178555611696565b82800160010185558215611696579182015b8281111561169657825182559160200191906001019061167b565b506116a29291506116a6565b5090565b5b808211156116a257600081556001016116a7565b6001600160e01b031981168114610c7557600080fd5b6000602082840312156116e357600080fd5b81356116ee816116bb565b9392505050565b80356001600160a01b038116811461170c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561175057611750611711565b604052919050565b600082601f83011261176957600080fd5b8135602067ffffffffffffffff82111561178557611785611711565b8160051b611794828201611727565b92835284810182019282810190878511156117ae57600080fd5b83870192505b848310156117cd578235825291830191908301906117b4565b979650505050505050565b6000806000606084860312156117ed57600080fd5b6117f6846116f5565b9250611804602085016116f5565b9150604084013567ffffffffffffffff81111561182057600080fd5b61182c86828701611758565b9150509250925092565b60005b83811015611851578181015183820152602001611839565b838111156104f05750506000910152565b6000815180845261187a816020860160208601611836565b601f01601f19169290920160200192915050565b6020815260006116ee6020830184611862565b6000602082840312156118b357600080fd5b5035919050565b600080604083850312156118cd57600080fd5b6118d6836116f5565b946020939093013593505050565b6000806000606084860312156118f957600080fd5b611902846116f5565b9250611910602085016116f5565b9150604084013590509250925092565b6000806040838503121561193357600080fd5b61193c836116f5565b9150602083013567ffffffffffffffff81111561195857600080fd5b61196485828601611758565b9150509250929050565b600067ffffffffffffffff83111561198857611988611711565b61199b601f8401601f1916602001611727565b90508281528383830111156119af57600080fd5b828260208301376000602084830101529392505050565b600082601f8301126119d757600080fd5b6116ee8383356020850161196e565b600080604083850312156119f957600080fd5b823567ffffffffffffffff811115611a1057600080fd5b611a1c858286016119c6565b925050611a2b602084016116f5565b90509250929050565b600060208284031215611a4657600080fd5b813567ffffffffffffffff811115611a5d57600080fd5b6113e3848285016119c6565b600060208284031215611a7b57600080fd5b6116ee826116f5565b60008060408385031215611a9757600080fd5b611aa0836116f5565b915060208301358015158114611ab557600080fd5b809150509250929050565b60008060008060808587031215611ad657600080fd5b611adf856116f5565b9350611aed602086016116f5565b925060408501359150606085013567ffffffffffffffff811115611b1057600080fd5b8501601f81018713611b2157600080fd5b611b308782356020840161196e565b91505092959194509250565b60008060408385031215611b4f57600080fd5b611b58836116f5565b9150611a2b602084016116f5565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680611b9057607f821691505b60208210811415611bb157634e487b7160e01b600052602260045260246000fd5b50919050565b604081526000611bca6040830185611862565b905060018060a01b03831660208301529392505050565b600060208284031215611bf357600080fd5b81516116ee816116bb565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b60408082526005908201526427aba722a960d91b60608201526001600160a01b0391909116602082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611c8b90830184611862565b9695505050505050565b60008151611ca7818560208601611836565b9290920192915050565b600080845481600182811c915080831680611ccd57607f831692505b6020808410821415611ced57634e487b7160e01b86526022600452602486fd5b818015611d015760018114611d1257611d3f565b60ff19861689528489019650611d3f565b60008b81526020902060005b86811015611d375781548b820152908501908301611d1e565b505084890196505b505050505050611d4f8185611c95565b95945050505050565b80516020808301519190811015611bb15760001960209190910360031b1b16919050565b60008251611d8e818460208701611836565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b6000600019821415611dc257611dc2611d98565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611dee57611dee611dc9565b500490565b600082821015611e0557611e05611d98565b500390565b600082611e1957611e19611dc9565b500690565b60008219821115611e3157611e31611d98565b50019056fea26469706673582212209775319f0958c81349ed8c45004f4974987ee4d0bc9cd9d7b8b5ffd32dd845a364736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101da5760003560e01c80636cef16e611610104578063a0bcfc7f116100a2578063c19ae2ed11610071578063c19ae2ed146103ff578063c87b56dd14610412578063d4ee1d9014610425578063e985e9c51461043857600080fd5b8063a0bcfc7f146103b3578063a22cb465146103c6578063ac5a7d5c146103d9578063b88d4fde146103ec57600080fd5b8063731f21a0116100de578063731f21a01461037d5780638456cb59146103905780638da5cb5b1461039857806395d89b41146103ab57600080fd5b80636cef16e61461034257806370768f861461034a57806370a082311461035d57600080fd5b80633f4ba83a1161017c5780635c975abb1161014b5780635c975abb146102eb5780636352211e146102f357806368e05a651461031c5780636c9cd0971461032f57600080fd5b80633f4ba83a146102aa57806340c10f19146102b257806342842e0e146102c55780634684d7e9146102d857600080fd5b8063081812fc116101b8578063081812fc14610231578063095ea7b31461027257806318160ddd1461028557806323b872dd1461029757600080fd5b806301ffc9a7146101df578063034601ec1461020757806306fdde031461021c575b600080fd5b6101f26101ed3660046116d1565b610466565b60405190151581526020015b60405180910390f35b61021a6102153660046117d8565b6104b8565b005b6102246104f6565b6040516101fe919061188e565b61025a61023f3660046118a1565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101fe565b61021a6102803660046118ba565b610584565b600c545b6040519081526020016101fe565b61021a6102a53660046118e4565b61066b565b61021a610832565b61021a6102c03660046118ba565b6108dd565b61021a6102d33660046118e4565b61093d565b61021a6102e6366004611920565b610a21565b6101f2610ab3565b61025a6103013660046118a1565b6003602052600090815260409020546001600160a01b031681565b61028961032a3660046118a1565b610acb565b6101f261033d3660046119e6565b610b42565b61021a610b83565b61021a610358366004611a34565b610c22565b61028961036b366004611a69565b60026020526000908152604090205481565b61021a61038b3660046119e6565b610c78565b61021a610cfc565b60065461025a906001600160a01b031681565b610224610da1565b61021a6103c1366004611a34565b610dae565b61021a6103d4366004611a84565b610e1e565b61021a6103e7366004611a69565b610e8a565b61021a6103fa366004611ac0565b610f96565b61021a61040d3660046119e6565b611061565b6102246104203660046118a1565b611120565b60075461025a906001600160a01b031681565b6101f2610446366004611b3c565b600560209081526000928352604080842090915290825290205460ff1681565b60006301ffc9a760e01b6001600160e01b03198316148061049757506380ac58cd60e01b6001600160e01b03198316145b806104b25750635b5e139f60e01b6001600160e01b03198316145b92915050565b60005b81518110156104f0576104e884848484815181106104db576104db611b66565b602002602001015161093d565b6001016104bb565b50505050565b6000805461050390611b7c565b80601f016020809104026020016040519081016040528092919081815260200182805461052f90611b7c565b801561057c5780601f106105515761010080835404028352916020019161057c565b820191906000526020600020905b81548152906001019060200180831161055f57829003601f168201915b505050505081565b6000818152600360205260409020546001600160a01b0316338114806105cd57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b61060f5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000818152600360205260409020546001600160a01b038481169116146106c15760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610606565b6001600160a01b03821661070b5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610606565b336001600160a01b038416148061073857506000818152600460205260409020546001600160a01b031633145b8061076657506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b6107a35760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610606565b6001600160a01b0380841660008181526002602090815260408083208054600019019055938616808352848320805460010190558583526003825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b604051806040016040528060068152602001652820aaa9a2a960d11b81525061085b8133610b42565b61087c5780336040516309ab81ed60e01b8152600401610606929190611bb7565b610884610ab3565b6108a157604051636cd6020160e01b815260040160405180910390fd5b60006008556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa906020015b60405180910390a150565b6040518060400160405280600681526020016526a4a72a22a960d11b8152506109068133610b42565b6109275780336040516309ab81ed60e01b8152600401610606929190611bb7565b600c8054600181019091556104f08482856111b9565b61094883838361066b565b6001600160a01b0382163b1580610a005750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a401602060405180830381600087803b1580156109bc57600080fd5b505af11580156109d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f49190611be1565b6001600160e01b031916145b610a1c5760405162461bcd60e51b815260040161060690611bfe565b505050565b6040518060400160405280600681526020016526a4a72a22a960d11b815250610a4a8133610b42565b610a6b5780336040516309ab81ed60e01b8152600401610606929190611bb7565b600c5460005b8351811015610aaa57610a9e8583868481518110610a9157610a91611b66565b60200260200101516111b9565b60019182019101610a71565b50600c55505050565b6000600854600114610ac55750600090565b50600190565b6000818152600360205260408120546001600160a01b0316610b2f5760405162461bcd60e51b815260206004820152601a60248201527f517565727920666f72206e6f6e6578697374656e7420676166660000000000006044820152606401610606565b506000908152600b602052604090205490565b600060096000610b51856111cd565b8152602080820192909252604090810160009081206001600160a01b038616825290925290205460ff16905092915050565b6007546001600160a01b03163314610bd257604080516309ab81ed60e01b8152600481019190915260096044820152682722abafa7aba722a960b91b6064820152336024820152608401610606565b60068054336001600160a01b0319821681179092556040516001600160a01b03909116919082907faac18e3887f7d855b2483e20615f8e3fb6efc18e25502090082b47047fb57c7390600090a350565b610c2c8133610b42565b610c6b5760405162461bcd60e51b815260206004820152601060248201526f149bdb19481b9bdd0819dc985b9d195960821b6044820152606401610606565b610c7581336111d8565b50565b6006546001600160a01b03163314610ca557336040516309ab81ed60e01b81526004016106069190611c28565b610caf8282610b42565b610cee5760405162461bcd60e51b815260206004820152601060248201526f149bdb19481b9bdd0819dc985b9d195960821b6044820152606401610606565b610cf882826111d8565b5050565b604051806040016040528060068152602001652820aaa9a2a960d11b815250610d258133610b42565b610d465780336040516309ab81ed60e01b8152600401610606929190611bb7565b610d4e610ab3565b15610d6c57604051631309a56360e01b815260040160405180910390fd5b60016008556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258906020016108d2565b6001805461050390611b7c565b6006546001600160a01b03163314610ddb57336040516309ab81ed60e01b81526004016106069190611c28565b8051610dee90600a906020840190611622565b507f157eb1fffc1000c7f0ee8cb1f87be2620ec910b8be9e3af7db8c97328e2757cf816040516108d2919061188e565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6006546001600160a01b03163314610eb757336040516309ab81ed60e01b81526004016106069190611c28565b6001600160a01b038116610efd5760405162461bcd60e51b815260206004820152600d60248201526c4e6f206164647265737328302960981b6044820152606401610606565b6006546001600160a01b0382811691161415610f4c5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c903732bb9037bbb732b960911b6044820152606401610606565b600780546001600160a01b0319166001600160a01b0383169081179091556040517fd52a054f85e9a057277cd95bf6d5da45465068f0467ec7991f3fcc017be6b72590600090a250565b610fa184848461066b565b6001600160a01b0383163b15806110455750604051630a85bd0160e11b808252906001600160a01b0385169063150b7a0290610fe7903390899088908890600401611c58565b602060405180830381600087803b15801561100157600080fd5b505af1158015611015573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110399190611be1565b6001600160e01b031916145b6104f05760405162461bcd60e51b815260040161060690611bfe565b6006546001600160a01b0316331461108e57336040516309ab81ed60e01b81526004016106069190611c28565b60008251116110d05760405162461bcd60e51b815260206004820152600e60248201526d2937b632903737ba1033b4bb32b760911b6044820152606401610606565b6001600160a01b0381166111165760405162461bcd60e51b815260206004820152600d60248201526c4e6f206164647265737328302960981b6044820152606401610606565b610cf88282611256565b6000818152600360205260409020546060906001600160a01b03166111875760405162461bcd60e51b815260206004820152601a60248201527f517565727920666f72206e6f6e6578697374656e7420676166660000000000006044820152606401610606565b600a611192836112e5565b6040516020016111a3929190611cb1565b6040516020818303038152906040529050919050565b6111c383836113eb565b610a1c82826114c6565b60006104b282611d58565b60006111e3836111cd565b60008181526009602090815260408083206001600160a01b038716808552925291829020805460ff1916905590519192503391611221908690611d7c565b604051908190038120907ff3a2b91552b535c273a48d8b7453c8b0b287e20e51d74121eb50d975dbaa506d90600090a4505050565b6112608282610b42565b610cf857600061126f836111cd565b60008181526009602090815260408083206001600160a01b038716808552925291829020805460ff19166001179055905191925033916112b0908690611d7c565b604051908190038120907fe0ca4f6d52d59033a91ab89e93c98f9acada14e0086d8b1038284f42e6d5325790600090a4505050565b6060816113095750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611333578061131d81611dae565b915061132c9050600a83611ddf565b915061130d565b60008167ffffffffffffffff81111561134e5761134e611711565b6040519080825280601f01601f191660200182016040528015611378576020820181803683370190505b5090505b84156113e35761138d600183611df3565b915061139a600a86611e0a565b6113a5906030611e1e565b60f81b8183815181106113ba576113ba611b66565b60200101906001600160f81b031916908160001a9053506113dc600a86611ddf565b945061137c565b949350505050565b6113f58282611517565b6001600160a01b0382163b15806114aa5750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a401602060405180830381600087803b15801561146657600080fd5b505af115801561147a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061149e9190611be1565b6001600160e01b031916145b610cf85760405162461bcd60e51b815260040161060690611bfe565b6000828152600b6020526040908190208290555182907fdd87ed9e371ab4208e2bf67d20e1ee6310c6087d87c9f73773b09e91e87abc389061150b9084815260200190565b60405180910390a25050565b6001600160a01b0382166115615760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610606565b6000818152600360205260409020546001600160a01b0316156115b75760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b6044820152606401610606565b6001600160a01b038216600081815260026020908152604080832080546001019055848352600390915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b82805461162e90611b7c565b90600052602060002090601f0160209004810192826116505760008555611696565b82601f1061166957805160ff1916838001178555611696565b82800160010185558215611696579182015b8281111561169657825182559160200191906001019061167b565b506116a29291506116a6565b5090565b5b808211156116a257600081556001016116a7565b6001600160e01b031981168114610c7557600080fd5b6000602082840312156116e357600080fd5b81356116ee816116bb565b9392505050565b80356001600160a01b038116811461170c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561175057611750611711565b604052919050565b600082601f83011261176957600080fd5b8135602067ffffffffffffffff82111561178557611785611711565b8160051b611794828201611727565b92835284810182019282810190878511156117ae57600080fd5b83870192505b848310156117cd578235825291830191908301906117b4565b979650505050505050565b6000806000606084860312156117ed57600080fd5b6117f6846116f5565b9250611804602085016116f5565b9150604084013567ffffffffffffffff81111561182057600080fd5b61182c86828701611758565b9150509250925092565b60005b83811015611851578181015183820152602001611839565b838111156104f05750506000910152565b6000815180845261187a816020860160208601611836565b601f01601f19169290920160200192915050565b6020815260006116ee6020830184611862565b6000602082840312156118b357600080fd5b5035919050565b600080604083850312156118cd57600080fd5b6118d6836116f5565b946020939093013593505050565b6000806000606084860312156118f957600080fd5b611902846116f5565b9250611910602085016116f5565b9150604084013590509250925092565b6000806040838503121561193357600080fd5b61193c836116f5565b9150602083013567ffffffffffffffff81111561195857600080fd5b61196485828601611758565b9150509250929050565b600067ffffffffffffffff83111561198857611988611711565b61199b601f8401601f1916602001611727565b90508281528383830111156119af57600080fd5b828260208301376000602084830101529392505050565b600082601f8301126119d757600080fd5b6116ee8383356020850161196e565b600080604083850312156119f957600080fd5b823567ffffffffffffffff811115611a1057600080fd5b611a1c858286016119c6565b925050611a2b602084016116f5565b90509250929050565b600060208284031215611a4657600080fd5b813567ffffffffffffffff811115611a5d57600080fd5b6113e3848285016119c6565b600060208284031215611a7b57600080fd5b6116ee826116f5565b60008060408385031215611a9757600080fd5b611aa0836116f5565b915060208301358015158114611ab557600080fd5b809150509250929050565b60008060008060808587031215611ad657600080fd5b611adf856116f5565b9350611aed602086016116f5565b925060408501359150606085013567ffffffffffffffff811115611b1057600080fd5b8501601f81018713611b2157600080fd5b611b308782356020840161196e565b91505092959194509250565b60008060408385031215611b4f57600080fd5b611b58836116f5565b9150611a2b602084016116f5565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680611b9057607f821691505b60208210811415611bb157634e487b7160e01b600052602260045260246000fd5b50919050565b604081526000611bca6040830185611862565b905060018060a01b03831660208301529392505050565b600060208284031215611bf357600080fd5b81516116ee816116bb565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b60408082526005908201526427aba722a960d91b60608201526001600160a01b0391909116602082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611c8b90830184611862565b9695505050505050565b60008151611ca7818560208601611836565b9290920192915050565b600080845481600182811c915080831680611ccd57607f831692505b6020808410821415611ced57634e487b7160e01b86526022600452602486fd5b818015611d015760018114611d1257611d3f565b60ff19861689528489019650611d3f565b60008b81526020902060005b86811015611d375781548b820152908501908301611d1e565b505084890196505b505050505050611d4f8185611c95565b95945050505050565b80516020808301519190811015611bb15760001960209190910360031b1b16919050565b60008251611d8e818460208701611836565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b6000600019821415611dc257611dc2611d98565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611dee57611dee611dc9565b500490565b600082821015611e0557611e05611d98565b500390565b600082611e1957611e19611dc9565b500690565b60008219821115611e3157611e31611d98565b50019056fea26469706673582212209775319f0958c81349ed8c45004f4974987ee4d0bc9cd9d7b8b5ffd32dd845a364736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3872,
        "contract": "contracts/Gaff.sol:Gaff",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 3874,
        "contract": "contracts/Gaff.sol:Gaff",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 3885,
        "contract": "contracts/Gaff.sol:Gaff",
        "label": "balanceOf",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 3889,
        "contract": "contracts/Gaff.sol:Gaff",
        "label": "ownerOf",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 3893,
        "contract": "contracts/Gaff.sol:Gaff",
        "label": "getApproved",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 3899,
        "contract": "contracts/Gaff.sol:Gaff",
        "label": "isApprovedForAll",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 4610,
        "contract": "contracts/Gaff.sol:Gaff",
        "label": "owner",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 4612,
        "contract": "contracts/Gaff.sol:Gaff",
        "label": "newOwner",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 4614,
        "contract": "contracts/Gaff.sol:Gaff",
        "label": "_paused",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 4620,
        "contract": "contracts/Gaff.sol:Gaff",
        "label": "_roles",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 6597,
        "contract": "contracts/Gaff.sol:Gaff",
        "label": "_baseUri",
        "offset": 0,
        "slot": "10",
        "type": "t_string_storage"
      },
      {
        "astId": 6601,
        "contract": "contracts/Gaff.sol:Gaff",
        "label": "_gaffTypes",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 6434,
        "contract": "contracts/Gaff.sol:Gaff",
        "label": "_gaffIdCounter",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}